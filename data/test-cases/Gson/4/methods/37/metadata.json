{"identifier": "value", "parameters": "(Number value)", "modifiers": "public", "return": "JsonWriter", "body": "public JsonWriter value(Number value) throws IOException {\n    if (value == null) {\n      return nullValue();\n    }\n\n    writeDeferredName();\n    String string = value.toString();\n    if (!lenient\n        && (string.equals(\"-Infinity\") || string.equals(\"Infinity\") || string.equals(\"NaN\"))) {\n      throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n    }\n    beforeValue();\n    out.append(string);\n    return this;\n  }", "class": "JsonWriter", "signature": "JsonWriter value(Number value)", "full_signature": "public JsonWriter value(Number value)", "class_method_signature": "JsonWriter.value(Number value)", "testcase": false, "constructor": false, "invocations": ["nullValue", "writeDeferredName", "toString", "equals", "equals", "equals", "beforeValue", "append"]}