JsonWriter implements Closeable, Flushable { public JsonWriter value(Number value) throws IOException { if (value == null) { return nullValue(); } writeDeferredName(); String string = value.toString(); if (!lenient && (string.equals("-Infinity") || string.equals("Infinity") || string.equals("NaN"))) { throw new IllegalArgumentException("Numeric values must be finite, but was " + value); } beforeValue(); out.append(string); return this; } JsonWriter(Writer out); final void setIndent(String indent); final void setLenient(boolean lenient); boolean isLenient(); final void setHtmlSafe(boolean htmlSafe); final boolean isHtmlSafe(); final void setSerializeNulls(boolean serializeNulls); final boolean getSerializeNulls(); JsonWriter beginArray(); JsonWriter endArray(); JsonWriter beginObject(); JsonWriter endObject(); JsonWriter name(String name); JsonWriter value(String value); JsonWriter jsonValue(String value); JsonWriter nullValue(); JsonWriter value(boolean value); JsonWriter value(double value); JsonWriter value(long value); JsonWriter value(Number value); void flush(); void close(); }