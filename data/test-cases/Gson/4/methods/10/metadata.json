{"identifier": "nextBoolean", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean nextBoolean() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n      p = doPeek();\n    }\n    if (p == PEEKED_TRUE) {\n      peeked = PEEKED_NONE;\n      pathIndices[stackSize - 1]++;\n      return true;\n    } else if (p == PEEKED_FALSE) {\n      peeked = PEEKED_NONE;\n      pathIndices[stackSize - 1]++;\n      return false;\n    }\n    throw new IllegalStateException(\"Expected a boolean but was \" + peek()\n        + \" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());\n  }", "class": "JsonReader", "signature": "boolean nextBoolean()", "full_signature": "public boolean nextBoolean()", "class_method_signature": "JsonReader.nextBoolean()", "testcase": false, "constructor": false, "invocations": ["doPeek", "peek", "getLineNumber", "getColumnNumber", "getPath"]}