{"identifier": "value", "parameters": "(double value)", "modifiers": "public", "return": "JsonWriter", "body": "public JsonWriter value(double value) throws IOException {\n    if (Double.isNaN(value) || Double.isInfinite(value)) {\n      throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n    }\n    writeDeferredName();\n    beforeValue();\n    out.append(Double.toString(value));\n    return this;\n  }", "class": "JsonWriter", "signature": "JsonWriter value(double value)", "full_signature": "public JsonWriter value(double value)", "class_method_signature": "JsonWriter.value(double value)", "testcase": false, "constructor": false, "invocations": ["isNaN", "isInfinite", "writeDeferredName", "beforeValue", "append", "toString"]}