{"identifier": "getTypeInfoForField", "parameters": "(Field f, Type typeDefiningF)", "modifiers": "public static", "return": "TypeInfo", "body": "public static TypeInfo getTypeInfoForField(Field f, Type typeDefiningF) {\n    Class<?> classDefiningF = TypeUtils.toRawClass(typeDefiningF);\n    Type type = f.getGenericType();\n    Type actualType = getActualType(type, typeDefiningF, classDefiningF);\n    return new TypeInfo(actualType);\n  }", "class": "TypeInfoFactory", "signature": "TypeInfo getTypeInfoForField(Field f, Type typeDefiningF)", "full_signature": "public static TypeInfo getTypeInfoForField(Field f, Type typeDefiningF)", "class_method_signature": "TypeInfoFactory.getTypeInfoForField(Field f, Type typeDefiningF)", "testcase": false, "constructor": false, "invocations": ["toRawClass", "getGenericType", "getActualType"]}