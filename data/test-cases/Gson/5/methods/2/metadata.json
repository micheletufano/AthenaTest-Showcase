{"identifier": "format", "parameters": "(Date date, boolean millis, TimeZone tz)", "modifiers": "public static", "return": "String", "body": "public static String format(Date date, boolean millis, TimeZone tz) {\n        Calendar calendar = new GregorianCalendar(tz, Locale.US);\n        calendar.setTime(date);\n\n        // estimate capacity of buffer as close as we can (yeah, that's pedantic ;)\n        int capacity = \"yyyy-MM-ddThh:mm:ss\".length();\n        capacity += millis ? \".sss\".length() : 0;\n        capacity += tz.getRawOffset() == 0 ? \"Z\".length() : \"+hh:mm\".length();\n        StringBuilder formatted = new StringBuilder(capacity);\n\n        padInt(formatted, calendar.get(Calendar.YEAR), \"yyyy\".length());\n        formatted.append('-');\n        padInt(formatted, calendar.get(Calendar.MONTH) + 1, \"MM\".length());\n        formatted.append('-');\n        padInt(formatted, calendar.get(Calendar.DAY_OF_MONTH), \"dd\".length());\n        formatted.append('T');\n        padInt(formatted, calendar.get(Calendar.HOUR_OF_DAY), \"hh\".length());\n        formatted.append(':');\n        padInt(formatted, calendar.get(Calendar.MINUTE), \"mm\".length());\n        formatted.append(':');\n        padInt(formatted, calendar.get(Calendar.SECOND), \"ss\".length());\n        if (millis) {\n            formatted.append('.');\n            padInt(formatted, calendar.get(Calendar.MILLISECOND), \"sss\".length());\n        }\n\n        int offset = tz.getOffset(calendar.getTimeInMillis());\n        if (offset != 0) {\n            int hours = Math.abs((offset / (60 * 1000)) / 60);\n            int minutes = Math.abs((offset / (60 * 1000)) % 60);\n            formatted.append(offset < 0 ? '-' : '+');\n            padInt(formatted, hours, \"hh\".length());\n            formatted.append(':');\n            padInt(formatted, minutes, \"mm\".length());\n        } else {\n            formatted.append('Z');\n        }\n\n        return formatted.toString();\n    }", "class": "ISO8601Utils", "signature": "String format(Date date, boolean millis, TimeZone tz)", "full_signature": "public static String format(Date date, boolean millis, TimeZone tz)", "class_method_signature": "ISO8601Utils.format(Date date, boolean millis, TimeZone tz)", "testcase": false, "constructor": false, "invocations": ["setTime", "length", "length", "getRawOffset", "length", "length", "padInt", "get", "length", "append", "padInt", "get", "length", "append", "padInt", "get", "length", "append", "padInt", "get", "length", "append", "padInt", "get", "length", "append", "padInt", "get", "length", "append", "padInt", "get", "length", "getOffset", "getTimeInMillis", "abs", "abs", "append", "padInt", "length", "append", "padInt", "length", "append", "toString"]}