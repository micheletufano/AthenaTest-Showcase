{"identifier": "subtypeOf", "parameters": "(Type bound)", "modifiers": "public static", "return": "WildcardType", "body": "public static WildcardType subtypeOf(Type bound) {\n    Type[] upperBounds;\n    if (bound instanceof WildcardType) {\n      upperBounds = ((WildcardType) bound).getUpperBounds();\n    } else {\n      upperBounds = new Type[] { bound };\n    }\n    return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);\n  }", "class": "Types", "signature": "WildcardType subtypeOf(Type bound)", "full_signature": "public static WildcardType subtypeOf(Type bound)", "class_method_signature": "Types.subtypeOf(Type bound)", "testcase": false, "constructor": false, "invocations": ["getUpperBounds"]}