DefaultDateTypeAdapter extends TypeAdapter<Date> { @Override public void write(JsonWriter out, Date value) throws IOException { if (value == null) { out.nullValue(); return; } synchronized (localFormat) { String dateFormatAsString = enUsFormat.format(value); out.value(dateFormatAsString); } } DefaultDateTypeAdapter(Class<? extends Date> dateType); DefaultDateTypeAdapter(Class<? extends Date> dateType, String datePattern); DefaultDateTypeAdapter(Class<? extends Date> dateType, int style); DefaultDateTypeAdapter(int dateStyle, int timeStyle); DefaultDateTypeAdapter(Class<? extends Date> dateType, int dateStyle, int timeStyle); DefaultDateTypeAdapter(final Class<? extends Date> dateType, DateFormat enUsFormat, DateFormat localFormat); @Override void write(JsonWriter out, Date value); @Override Date read(JsonReader in); @Override String toString(); }