{"identifier": "name", "parameters": "(String name)", "modifiers": "@Override public", "return": "JsonWriter", "body": "@Override public JsonWriter name(String name) throws IOException {\n    if (stack.isEmpty() || pendingName != null) {\n      throw new IllegalStateException();\n    }\n    JsonElement element = peek();\n    if (element instanceof JsonObject) {\n      pendingName = name;\n      return this;\n    }\n    throw new IllegalStateException();\n  }", "class": "JsonTreeWriter", "signature": "JsonWriter name(String name)", "full_signature": "@Override public JsonWriter name(String name)", "class_method_signature": "JsonTreeWriter.name(String name)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "peek"]}