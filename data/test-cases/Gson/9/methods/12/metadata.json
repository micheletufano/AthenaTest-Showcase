{"identifier": "value", "parameters": "(Number value)", "modifiers": "@Override public", "return": "JsonWriter", "body": "@Override public JsonWriter value(Number value) throws IOException {\n    if (value == null) {\n      return nullValue();\n    }\n\n    if (!isLenient()) {\n      double d = value.doubleValue();\n      if (Double.isNaN(d) || Double.isInfinite(d)) {\n        throw new IllegalArgumentException(\"JSON forbids NaN and infinities: \" + value);\n      }\n    }\n\n    put(new JsonPrimitive(value));\n    return this;\n  }", "class": "JsonTreeWriter", "signature": "JsonWriter value(Number value)", "full_signature": "@Override public JsonWriter value(Number value)", "class_method_signature": "JsonTreeWriter.value(Number value)", "testcase": false, "constructor": false, "invocations": ["nullValue", "isLenient", "doubleValue", "isNaN", "isInfinite", "put"]}