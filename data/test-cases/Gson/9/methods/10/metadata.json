{"identifier": "value", "parameters": "(double value)", "modifiers": "@Override public", "return": "JsonWriter", "body": "@Override public JsonWriter value(double value) throws IOException {\n    if (!isLenient() && (Double.isNaN(value) || Double.isInfinite(value))) {\n      throw new IllegalArgumentException(\"JSON forbids NaN and infinities: \" + value);\n    }\n    put(new JsonPrimitive(value));\n    return this;\n  }", "class": "JsonTreeWriter", "signature": "JsonWriter value(double value)", "full_signature": "@Override public JsonWriter value(double value)", "class_method_signature": "JsonTreeWriter.value(double value)", "testcase": false, "constructor": false, "invocations": ["isLenient", "isNaN", "isInfinite", "put"]}