{"identifier": "getCollectionElementType", "parameters": "(Type context, Class<?> contextRawType)", "modifiers": "public static", "return": "Type", "body": "public static Type getCollectionElementType(Type context, Class<?> contextRawType) {\n    Type collectionType = getSupertype(context, contextRawType, Collection.class);\n\n    if (collectionType instanceof WildcardType) {\n      collectionType = ((WildcardType)collectionType).getUpperBounds()[0];\n    }\n    if (collectionType instanceof ParameterizedType) {\n      return ((ParameterizedType) collectionType).getActualTypeArguments()[0];\n    }\n    return Object.class;\n  }", "class": "Types", "signature": "Type getCollectionElementType(Type context, Class<?> contextRawType)", "full_signature": "public static Type getCollectionElementType(Type context, Class<?> contextRawType)", "class_method_signature": "Types.getCollectionElementType(Type context, Class<?> contextRawType)", "testcase": false, "constructor": false, "invocations": ["getSupertype", "getUpperBounds", "getActualTypeArguments"]}