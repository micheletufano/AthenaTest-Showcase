JsonReader implements Closeable { public String getPath() { StringBuilder result = new StringBuilder().append('$'); for (int i = 0, size = stackSize; i < size; i++) { switch (stack[i]) { case JsonScope.EMPTY_ARRAY: case JsonScope.NONEMPTY_ARRAY: result.append('[').append(pathIndices[i]).append(']'); break; case JsonScope.EMPTY_OBJECT: case JsonScope.DANGLING_NAME: case JsonScope.NONEMPTY_OBJECT: result.append('.'); if (pathNames[i] != null) { result.append(pathNames[i]); } break; case JsonScope.NONEMPTY_DOCUMENT: case JsonScope.EMPTY_DOCUMENT: case JsonScope.CLOSED: break; } } return result.toString(); } JsonReader(Reader in); final void setLenient(boolean lenient); final boolean isLenient(); void beginArray(); void endArray(); void beginObject(); void endObject(); boolean hasNext(); JsonToken peek(); String nextName(); String nextString(); boolean nextBoolean(); void nextNull(); double nextDouble(); long nextLong(); int nextInt(); void close(); void skipValue(); @Override String toString(); String getPath(); }