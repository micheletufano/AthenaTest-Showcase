{"identifier": "parseDate", "parameters": "(String str, String[] parsePatterns)", "modifiers": "public static", "return": "Date", "body": "public static Date parseDate(String str, String[] parsePatterns) throws ParseException {\n        if (str == null || parsePatterns == null) {\n            throw new IllegalArgumentException(\"Date and Patterns must not be null\");\n        }\n        \n        SimpleDateFormat parser = null;\n        ParsePosition pos = new ParsePosition(0);\n        for (int i = 0; i < parsePatterns.length; i++) {\n            if (i == 0) {\n                parser = new SimpleDateFormat(parsePatterns[0]);\n            } else {\n                parser.applyPattern(parsePatterns[i]);\n            }\n            pos.setIndex(0);\n            Date date = parser.parse(str, pos);\n            if (date != null && pos.getIndex() == str.length()) {\n                return date;\n            }\n        }\n        throw new ParseException(\"Unable to parse the date: \" + str, -1);\n    }", "class": "DateUtils", "signature": "Date parseDate(String str, String[] parsePatterns)", "full_signature": "public static Date parseDate(String str, String[] parsePatterns)", "class_method_signature": "DateUtils.parseDate(String str, String[] parsePatterns)", "testcase": false, "constructor": false, "invocations": ["applyPattern", "setIndex", "parse", "getIndex", "length"]}