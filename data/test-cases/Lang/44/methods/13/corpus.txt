NumberUtils { public static int compare(double lhs, double rhs) { if (lhs < rhs) { return -1; } if (lhs > rhs) { return +1; } long lhsBits = Double.doubleToLongBits(lhs); long rhsBits = Double.doubleToLongBits(rhs); if (lhsBits == rhsBits) { return 0; } if (lhsBits < rhsBits) { return -1; } else { return +1; } } NumberUtils(); static int stringToInt(String str); static int stringToInt(String str, int defaultValue); static Number createNumber(String val); static Float createFloat(String val); static Double createDouble(String val); static Integer createInteger(String val); static Long createLong(String val); static BigInteger createBigInteger(String val); static BigDecimal createBigDecimal(String val); static long minimum(long a, long b, long c); static int minimum(int a, int b, int c); static long maximum(long a, long b, long c); static int maximum(int a, int b, int c); static int compare(double lhs, double rhs); static int compare(float lhs, float rhs); static boolean isDigits(String str); static boolean isNumber(String str); }