{"identifier": "indexOfIgnoreCase", "parameters": "(CharSequence str, CharSequence searchStr, int startPos)", "modifiers": "public static", "return": "int", "body": "public static int indexOfIgnoreCase(CharSequence str, CharSequence searchStr, int startPos) {\n        if (str == null || searchStr == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startPos < 0) {\n            startPos = 0;\n        }\n        int endLimit = str.length() - searchStr.length() + 1;\n        if (startPos > endLimit) {\n            return INDEX_NOT_FOUND;\n        }\n        if (searchStr.length() == 0) {\n            return startPos;\n        }\n        for (int i = startPos; i < endLimit; i++) {\n            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }", "class": "StringUtils", "signature": "int indexOfIgnoreCase(CharSequence str, CharSequence searchStr, int startPos)", "full_signature": "public static int indexOfIgnoreCase(CharSequence str, CharSequence searchStr, int startPos)", "class_method_signature": "StringUtils.indexOfIgnoreCase(CharSequence str, CharSequence searchStr, int startPos)", "testcase": false, "constructor": false, "invocations": ["length", "length", "length", "regionMatches", "length"]}