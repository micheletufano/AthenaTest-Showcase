FastDateParser implements DateParser, Serializable { @Override public Date parse(String source) throws ParseException { Date date= parse(source, new ParsePosition(0)); if(date==null) { if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; } protected FastDateParser(String pattern, TimeZone timeZone, Locale locale); @Override String getPattern(); @Override TimeZone getTimeZone(); @Override Locale getLocale(); @Override boolean equals(Object obj); @Override int hashCode(); @Override String toString(); @Override Object parseObject(String source); @Override Date parse(String source); @Override Object parseObject(String source, ParsePosition pos); @Override Date parse(String source, ParsePosition pos); }