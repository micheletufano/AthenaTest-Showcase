{"identifier": "primitivesToWrappers", "parameters": "(Class<?>[] classes)", "modifiers": "public static", "return": "Class<?>[]", "body": "public static Class<?>[] primitivesToWrappers(Class<?>[] classes) {\n        if (classes == null) {\n            return null;\n        }\n\n        if (classes.length == 0) {\n            return classes;\n        }\n\n        Class<?>[] convertedClasses = new Class[classes.length];\n        for (int i = 0; i < classes.length; i++) {\n            convertedClasses[i] = primitiveToWrapper(classes[i]);\n        }\n        return convertedClasses;\n    }", "class": "ClassUtils", "signature": "Class<?>[] primitivesToWrappers(Class<?>[] classes)", "full_signature": "public static Class<?>[] primitivesToWrappers(Class<?>[] classes)", "class_method_signature": "ClassUtils.primitivesToWrappers(Class<?>[] classes)", "testcase": false, "constructor": false, "invocations": ["primitiveToWrapper"]}