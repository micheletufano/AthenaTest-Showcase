{"identifier": "getClass", "parameters": "(\n            ClassLoader classLoader, String className, boolean initialize)", "modifiers": "public static", "return": "Class<?>", "body": "public static Class<?> getClass(\n            ClassLoader classLoader, String className, boolean initialize) throws ClassNotFoundException {\n        Class<?> clazz;\n        if (abbreviationMap.containsKey(className)) {\n            String clsName = \"[\" + abbreviationMap.get(className);\n            clazz = Class.forName(clsName, initialize, classLoader).getComponentType();\n        } else {\n            clazz = Class.forName(toCanonicalName(className), initialize, classLoader);\n        }\n        return clazz;\n    }", "class": "ClassUtils", "signature": "Class<?> getClass(\n            ClassLoader classLoader, String className, boolean initialize)", "full_signature": "public static Class<?> getClass(\n            ClassLoader classLoader, String className, boolean initialize)", "class_method_signature": "ClassUtils.getClass(\n            ClassLoader classLoader, String className, boolean initialize)", "testcase": false, "constructor": false, "invocations": ["containsKey", "get", "getComponentType", "forName", "forName", "toCanonicalName"]}