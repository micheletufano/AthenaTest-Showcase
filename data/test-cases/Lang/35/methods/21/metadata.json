{"identifier": "subarray", "parameters": "(float[] array, int startIndexInclusive, int endIndexExclusive)", "modifiers": "public static", "return": "float[]", "body": "public static float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        if (newSize <= 0) {\n            return EMPTY_FLOAT_ARRAY;\n        }\n\n        float[] subarray = new float[newSize];\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }", "class": "ArrayUtils", "signature": "float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive)", "full_signature": "public static float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive)", "class_method_signature": "ArrayUtils.subarray(float[] array, int startIndexInclusive, int endIndexExclusive)", "testcase": false, "constructor": false, "invocations": ["arraycopy"]}