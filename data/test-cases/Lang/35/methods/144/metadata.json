{"identifier": "add", "parameters": "(T[] array, int index, T element)", "modifiers": "public static", "return": "T[]", "body": "public static <T> T[] add(T[] array, int index, T element) {\n        Class<?> clss = null;\n        if (array != null) {\n            clss = array.getClass().getComponentType();\n        } else if (element != null) {\n            clss = element.getClass();\n        } else {\n            throw new IllegalArgumentException(\"Array and element cannot both be null\");            \n        }\n        @SuppressWarnings(\"unchecked\") // the add method creates an array of type clss, which is type T\n        final T[] newArray = (T[]) add(array, index, element, clss);\n        return newArray;\n    }", "class": "ArrayUtils", "signature": "T[] add(T[] array, int index, T element)", "full_signature": "public static T[] add(T[] array, int index, T element)", "class_method_signature": "ArrayUtils.add(T[] array, int index, T element)", "testcase": false, "constructor": false, "invocations": ["getComponentType", "getClass", "getClass", "add"]}