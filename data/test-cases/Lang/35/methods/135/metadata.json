{"identifier": "add", "parameters": "(T[] array, T element)", "modifiers": "public static", "return": "T[]", "body": "public static <T> T[] add(T[] array, T element) {\n        Class<?> type;\n        if (array != null){\n            type = array.getClass();\n        } else if (element != null) {\n            type = element.getClass();\n        } else {\n            throw new IllegalArgumentException(\"Arguments cannot both be null\");            \n        }\n        @SuppressWarnings(\"unchecked\") // type must be T\n        T[] newArray = (T[]) copyArrayGrow1(array, type);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }", "class": "ArrayUtils", "signature": "T[] add(T[] array, T element)", "full_signature": "public static T[] add(T[] array, T element)", "class_method_signature": "ArrayUtils.add(T[] array, T element)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "copyArrayGrow1"]}