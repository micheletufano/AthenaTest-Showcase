FastDateFormat extends Format { public boolean equals(Object obj) { if (obj instanceof FastDateFormat == false) { return false; } FastDateFormat other = (FastDateFormat) obj; if ( (mPattern == other.mPattern || mPattern.equals(other.mPattern)) && (mTimeZone == other.mTimeZone || mTimeZone.equals(other.mTimeZone)) && (mLocale == other.mLocale || mLocale.equals(other.mLocale)) && (mTimeZoneForced == other.mTimeZoneForced) && (mLocaleForced == other.mLocaleForced) ) { return true; } return false; } protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale); static FastDateFormat getInstance(); static FastDateFormat getInstance(String pattern); static FastDateFormat getInstance(String pattern, TimeZone timeZone); static FastDateFormat getInstance(String pattern, Locale locale); static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale); static FastDateFormat getDateInstance(int style); static FastDateFormat getDateInstance(int style, Locale locale); static FastDateFormat getDateInstance(int style, TimeZone timeZone); static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale); static FastDateFormat getTimeInstance(int style); static FastDateFormat getTimeInstance(int style, Locale locale); static FastDateFormat getTimeInstance(int style, TimeZone timeZone); static synchronized FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale); static FastDateFormat getDateTimeInstance( int dateStyle, int timeStyle); static FastDateFormat getDateTimeInstance( int dateStyle, int timeStyle, Locale locale); static FastDateFormat getDateTimeInstance( int dateStyle, int timeStyle, TimeZone timeZone); static synchronized FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone, Locale locale); StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos); String format(long millis); String format(Date date); String format(Calendar calendar); StringBuffer format(long millis, StringBuffer buf); StringBuffer format(Date date, StringBuffer buf); StringBuffer format(Calendar calendar, StringBuffer buf); Object parseObject(String source, ParsePosition pos); String getPattern(); TimeZone getTimeZone(); boolean getTimeZoneOverridesCalendar(); Locale getLocale(); int getMaxLengthEstimate(); boolean equals(Object obj); int hashCode(); String toString(); static final int FULL; static final int LONG; static final int MEDIUM; static final int SHORT; }