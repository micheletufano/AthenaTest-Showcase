{"identifier": "getTime", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long getTime() {\n        if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) {\n            return this.stopTime - this.startTime;\n        } else\n        if(this.runningState == STATE_UNSTARTED) {\n            return 0;\n        } else\n        if(this.runningState == STATE_RUNNING) {\n            return System.currentTimeMillis() - this.startTime;\n        }\n        throw new RuntimeException(\"Illegal running state has occured. \");\n    }", "class": "StopWatch", "signature": "long getTime()", "full_signature": "public long getTime()", "class_method_signature": "StopWatch.getTime()", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis"]}