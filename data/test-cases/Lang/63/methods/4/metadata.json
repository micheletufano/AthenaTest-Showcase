{"identifier": "formatDurationWords", "parameters": "(\n        long durationMillis,\n        boolean suppressLeadingZeroElements,\n        boolean suppressTrailingZeroElements)", "modifiers": "public static", "return": "String", "body": "public static String formatDurationWords(\n        long durationMillis,\n        boolean suppressLeadingZeroElements,\n        boolean suppressTrailingZeroElements) {\n\n        // This method is generally replacable by the format method, but \n        // there are a series of tweaks and special cases that require \n        // trickery to replicate.\n        String duration = formatDuration(durationMillis, \"d' days 'H' hours 'm' minutes 's' seconds'\");\n        if (suppressLeadingZeroElements) {\n            // this is a temporary marker on the front. Like ^ in regexp.\n            duration = \" \" + duration;\n            String tmp = StringUtils.replaceOnce(duration, \" 0 days\", \"\");\n            if (tmp.length() != duration.length()) {\n                duration = tmp;\n                tmp = StringUtils.replaceOnce(duration, \" 0 hours\", \"\");\n                if (tmp.length() != duration.length()) {\n                    duration = tmp;\n                    tmp = StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");\n                    duration = tmp;\n                    if (tmp.length() != duration.length()) {\n                        duration = StringUtils.replaceOnce(tmp, \" 0 seconds\", \"\");\n                    }\n                }\n            }\n            if (duration.length() != 0) {\n                // strip the space off again\n                duration = duration.substring(1);\n            }\n        }\n        if (suppressTrailingZeroElements) {\n            String tmp = StringUtils.replaceOnce(duration, \" 0 seconds\", \"\");\n            if (tmp.length() != duration.length()) {\n                duration = tmp;\n                tmp = StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");\n                if (tmp.length() != duration.length()) {\n                    duration = tmp;\n                    tmp = StringUtils.replaceOnce(duration, \" 0 hours\", \"\");\n                    if (tmp.length() != duration.length()) {\n                        duration = StringUtils.replaceOnce(tmp, \" 0 days\", \"\");\n                    }\n                }\n            }\n        }\n        // handle plurals\n        duration = \" \" + duration;\n        duration = StringUtils.replaceOnce(duration, \" 1 seconds\", \" 1 second\");\n        duration = StringUtils.replaceOnce(duration, \" 1 minutes\", \" 1 minute\");\n        duration = StringUtils.replaceOnce(duration, \" 1 hours\", \" 1 hour\");\n        duration = StringUtils.replaceOnce(duration, \" 1 days\", \" 1 day\");\n        return duration.trim();\n    }", "class": "DurationFormatUtils", "signature": "String formatDurationWords(\n        long durationMillis,\n        boolean suppressLeadingZeroElements,\n        boolean suppressTrailingZeroElements)", "full_signature": "public static String formatDurationWords(\n        long durationMillis,\n        boolean suppressLeadingZeroElements,\n        boolean suppressTrailingZeroElements)", "class_method_signature": "DurationFormatUtils.formatDurationWords(\n        long durationMillis,\n        boolean suppressLeadingZeroElements,\n        boolean suppressTrailingZeroElements)", "testcase": false, "constructor": false, "invocations": ["formatDuration", "replaceOnce", "length", "length", "replaceOnce", "length", "length", "replaceOnce", "length", "length", "replaceOnce", "length", "substring", "replaceOnce", "length", "length", "replaceOnce", "length", "length", "replaceOnce", "length", "length", "replaceOnce", "replaceOnce", "replaceOnce", "replaceOnce", "replaceOnce", "trim"]}