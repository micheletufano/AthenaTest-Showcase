EqualsBuilder { public EqualsBuilder append(byte lhs, byte rhs) { if (isEquals == false) { return this; } isEquals = (lhs == rhs); return this; } EqualsBuilder(); static boolean reflectionEquals(Object lhs, Object rhs); static boolean reflectionEquals(Object lhs, Object rhs, Collection /*String*/ excludeFields); static boolean reflectionEquals(Object lhs, Object rhs, String[] excludeFields); static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients); static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class reflectUpToClass); static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class reflectUpToClass, String[] excludeFields); EqualsBuilder appendSuper(boolean superEquals); EqualsBuilder append(Object lhs, Object rhs); EqualsBuilder append(long lhs, long rhs); EqualsBuilder append(int lhs, int rhs); EqualsBuilder append(short lhs, short rhs); EqualsBuilder append(char lhs, char rhs); EqualsBuilder append(byte lhs, byte rhs); EqualsBuilder append(double lhs, double rhs); EqualsBuilder append(float lhs, float rhs); EqualsBuilder append(boolean lhs, boolean rhs); EqualsBuilder append(Object[] lhs, Object[] rhs); EqualsBuilder append(long[] lhs, long[] rhs); EqualsBuilder append(int[] lhs, int[] rhs); EqualsBuilder append(short[] lhs, short[] rhs); EqualsBuilder append(char[] lhs, char[] rhs); EqualsBuilder append(byte[] lhs, byte[] rhs); EqualsBuilder append(double[] lhs, double[] rhs); EqualsBuilder append(float[] lhs, float[] rhs); EqualsBuilder append(boolean[] lhs, boolean[] rhs); boolean isEquals(); }