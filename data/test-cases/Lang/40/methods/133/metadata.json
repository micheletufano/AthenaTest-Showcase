{"identifier": "indexOfDifference", "parameters": "(String[] strs)", "modifiers": "public static", "return": "int", "body": "public static int indexOfDifference(String[] strs) {\n        if (strs == null || strs.length <= 1) {\n            return -1;\n        }\n        boolean anyStringNull = false;\n        boolean allStringsNull = true;\n        int arrayLen = strs.length;\n        int shortestStrLen = Integer.MAX_VALUE;\n        int longestStrLen = 0;\n\n        // find the min and max string lengths; this avoids checking to make\n        // sure we are not exceeding the length of the string each time through\n        // the bottom loop.\n        for (int i = 0; i < arrayLen; i++) {\n            if (strs[i] == null) {\n                anyStringNull = true;\n                shortestStrLen = 0;\n            } else {\n                allStringsNull = false;\n                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);\n                longestStrLen = Math.max(strs[i].length(), longestStrLen);\n            }\n        }\n\n        // handle lists containing all nulls or all empty strings\n        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {\n            return -1;\n        }\n\n        // handle lists containing some nulls or some empty strings\n        if (shortestStrLen == 0) {\n            return 0;\n        }\n\n        // find the position with the first difference across all strings\n        int firstDiff = -1;\n        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {\n            char comparisonChar = strs[0].charAt(stringPos);\n            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {\n                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {\n                    firstDiff = stringPos;\n                    break;\n                }\n            }\n            if (firstDiff != -1) {\n                break;\n            }\n        }\n\n        if (firstDiff == -1 && shortestStrLen != longestStrLen) {\n            // we compared all of the characters up to the length of the\n            // shortest string and didn't find a match, but the string lengths\n            // vary, so return the length of the shortest string.\n            return shortestStrLen;\n        }\n        return firstDiff;\n    }", "class": "StringUtils", "signature": "int indexOfDifference(String[] strs)", "full_signature": "public static int indexOfDifference(String[] strs)", "class_method_signature": "StringUtils.indexOfDifference(String[] strs)", "testcase": false, "constructor": false, "invocations": ["min", "length", "max", "length", "charAt", "charAt"]}