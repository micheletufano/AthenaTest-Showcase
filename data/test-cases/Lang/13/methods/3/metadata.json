{"identifier": "deserialize", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "Object", "body": "public static Object deserialize(InputStream inputStream) {\n        if (inputStream == null) {\n            throw new IllegalArgumentException(\"The InputStream must not be null\");\n        }\n        ObjectInputStream in = null;\n        try {\n            // stream closed in the finally\n            in = new ObjectInputStream(inputStream);\n            return in.readObject();\n\n        } catch (ClassNotFoundException ex) {\n            throw new SerializationException(ex);\n        } catch (IOException ex) {\n            throw new SerializationException(ex);\n        } finally {\n            try {\n                if (in != null) {\n                    in.close();\n                }\n            } catch (IOException ex) { // NOPMD\n                // ignore close exception\n            }\n        }\n    }", "class": "SerializationUtils", "signature": "Object deserialize(InputStream inputStream)", "full_signature": "public static Object deserialize(InputStream inputStream)", "class_method_signature": "SerializationUtils.deserialize(InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["readObject", "close"]}