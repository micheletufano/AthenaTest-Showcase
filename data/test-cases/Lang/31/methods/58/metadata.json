{"identifier": "substringsBetween", "parameters": "(String str, String open, String close)", "modifiers": "public static", "return": "String[]", "body": "public static String[] substringsBetween(String str, String open, String close) {\n        if (str == null || isEmpty(open) || isEmpty(close)) {\n            return null;\n        }\n        int strLen = str.length();\n        if (strLen == 0) {\n            return ArrayUtils.EMPTY_STRING_ARRAY;\n        }\n        int closeLen = close.length();\n        int openLen = open.length();\n        List<String> list = new ArrayList<String>();\n        int pos = 0;\n        while (pos < (strLen - closeLen)) {\n            int start = str.indexOf(open, pos);\n            if (start < 0) {\n                break;\n            }\n            start += openLen;\n            int end = str.indexOf(close, start);\n            if (end < 0) {\n                break;\n            }\n            list.add(str.substring(start, end));\n            pos = end + closeLen;\n        }\n        if (list.isEmpty()) {\n            return null;\n        } \n        return list.toArray(new String [list.size()]);\n    }", "class": "StringUtils", "signature": "String[] substringsBetween(String str, String open, String close)", "full_signature": "public static String[] substringsBetween(String str, String open, String close)", "class_method_signature": "StringUtils.substringsBetween(String str, String open, String close)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "isEmpty", "length", "length", "length", "indexOf", "indexOf", "add", "substring", "isEmpty", "toArray", "size"]}