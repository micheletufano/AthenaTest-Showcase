Fraction extends Number implements Comparable { public Fraction invert() { if (numerator == 0) { throw new ArithmeticException("Unable to invert zero."); } if (numerator==Integer.MIN_VALUE) { throw new ArithmeticException("overflow: can't negate numerator"); } if (numerator<0) { return new Fraction(-denominator, -numerator); } else { return new Fraction(denominator, numerator); } } private Fraction(int numerator, int denominator); static Fraction getFraction(int numerator, int denominator); static Fraction getFraction(int whole, int numerator, int denominator); static Fraction getReducedFraction(int numerator, int denominator); static Fraction getFraction(double value); static Fraction getFraction(String str); int getNumerator(); int getDenominator(); int getProperNumerator(); int getProperWhole(); int intValue(); long longValue(); float floatValue(); double doubleValue(); Fraction reduce(); Fraction invert(); Fraction negate(); Fraction abs(); Fraction pow(int power); Fraction add(Fraction fraction); Fraction subtract(Fraction fraction); Fraction multiplyBy(Fraction fraction); Fraction divideBy(Fraction fraction); boolean equals(Object obj); int hashCode(); int compareTo(Object object); String toString(); String toProperString(); static final Fraction ZERO; static final Fraction ONE; static final Fraction ONE_HALF; static final Fraction ONE_THIRD; static final Fraction TWO_THIRDS; static final Fraction ONE_QUARTER; static final Fraction TWO_QUARTERS; static final Fraction THREE_QUARTERS; static final Fraction ONE_FIFTH; static final Fraction TWO_FIFTHS; static final Fraction THREE_FIFTHS; static final Fraction FOUR_FIFTHS; }