{"identifier": "divideBy", "parameters": "(Fraction fraction)", "modifiers": "public", "return": "Fraction", "body": "public Fraction divideBy(Fraction fraction) {\n        if (fraction == null) {\n            throw new IllegalArgumentException(\"The fraction must not be null\");\n        }\n        if (fraction.numerator == 0) {\n            throw new ArithmeticException(\"The fraction to divide by must not be zero\");\n        }\n        return multiplyBy(fraction.invert());\n    }", "class": "Fraction", "signature": "Fraction divideBy(Fraction fraction)", "full_signature": "public Fraction divideBy(Fraction fraction)", "class_method_signature": "Fraction.divideBy(Fraction fraction)", "testcase": false, "constructor": false, "invocations": ["multiplyBy", "invert"]}