{"identifier": "join", "parameters": "(Iterator<?> iterator, String separator)", "modifiers": "public static", "return": "String", "body": "public static String join(Iterator<?> iterator, String separator) {\n\n        // handle null, zero and one elements before building a buffer\n        if (iterator == null) {\n            return null;\n        }\n        if (!iterator.hasNext()) {\n            return EMPTY;\n        }\n        Object first = iterator.next();\n        if (!iterator.hasNext()) {\n            return ObjectUtils.toString(first);\n        }\n\n        // two or more elements\n        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small\n        if (first != null) {\n            buf.append(first);\n        }\n\n        while (iterator.hasNext()) {\n            if (separator != null) {\n                buf.append(separator);\n            }\n            Object obj = iterator.next();\n            if (obj != null) {\n                buf.append(obj);\n            }\n        }\n        return buf.toString();\n    }", "class": "StringUtils", "signature": "String join(Iterator<?> iterator, String separator)", "full_signature": "public static String join(Iterator<?> iterator, String separator)", "class_method_signature": "StringUtils.join(Iterator<?> iterator, String separator)", "testcase": false, "constructor": false, "invocations": ["hasNext", "next", "hasNext", "toString", "append", "hasNext", "append", "next", "append", "toString"]}