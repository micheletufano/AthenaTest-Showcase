{"identifier": "append", "parameters": "(Object object)", "modifiers": "public", "return": "HashCodeBuilder", "body": "public HashCodeBuilder append(Object object) {\n        if (object == null) {\n            iTotal = iTotal * iConstant;\n\n        } else {\n            if(object.getClass().isArray()) {\n                // 'Switch' on type of array, to dispatch to the correct handler\n                // This handles multi dimensional arrays\n                if (object instanceof long[]) {\n                    append((long[]) object);\n                } else if (object instanceof int[]) {\n                    append((int[]) object);\n                } else if (object instanceof short[]) {\n                    append((short[]) object);\n                } else if (object instanceof char[]) {\n                    append((char[]) object);\n                } else if (object instanceof byte[]) {\n                    append((byte[]) object);\n                } else if (object instanceof double[]) {\n                    append((double[]) object);\n                } else if (object instanceof float[]) {\n                    append((float[]) object);\n                } else if (object instanceof boolean[]) {\n                    append((boolean[]) object);\n                } else {\n                    // Not an array of primitives\n                    append((Object[]) object);\n                }\n            } else {\n                iTotal = iTotal * iConstant + object.hashCode();\n            }\n        }\n        return this;\n    }", "class": "HashCodeBuilder", "signature": "HashCodeBuilder append(Object object)", "full_signature": "public HashCodeBuilder append(Object object)", "class_method_signature": "HashCodeBuilder.append(Object object)", "testcase": false, "constructor": false, "invocations": ["isArray", "getClass", "append", "append", "append", "append", "append", "append", "append", "append", "append", "hashCode"]}