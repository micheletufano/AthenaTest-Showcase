{"identifier": "isAssignable", "parameters": "(Class<?>[] classArray, Class<?>[] toClassArray, boolean autoboxing)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isAssignable(Class<?>[] classArray, Class<?>[] toClassArray, boolean autoboxing) {\n        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {\n            return false;\n        }\n        if (classArray == null) {\n            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;\n        }\n        if (toClassArray == null) {\n            toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;\n        }\n        for (int i = 0; i < classArray.length; i++) {\n            if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {\n                return false;\n            }\n        }\n        return true;\n    }", "class": "ClassUtils", "signature": "boolean isAssignable(Class<?>[] classArray, Class<?>[] toClassArray, boolean autoboxing)", "full_signature": "public static boolean isAssignable(Class<?>[] classArray, Class<?>[] toClassArray, boolean autoboxing)", "class_method_signature": "ClassUtils.isAssignable(Class<?>[] classArray, Class<?>[] toClassArray, boolean autoboxing)", "testcase": false, "constructor": false, "invocations": ["isSameLength", "isAssignable"]}