{"identifier": "primitiveToWrapper", "parameters": "(Class<?> cls)", "modifiers": "public static", "return": "Class<?>", "body": "public static Class<?> primitiveToWrapper(Class<?> cls) {\n        Class<?> convertedClass = cls;\n        if (cls != null && cls.isPrimitive()) {\n            convertedClass = primitiveWrapperMap.get(cls);\n        }\n        return convertedClass;\n    }", "class": "ClassUtils", "signature": "Class<?> primitiveToWrapper(Class<?> cls)", "full_signature": "public static Class<?> primitiveToWrapper(Class<?> cls)", "class_method_signature": "ClassUtils.primitiveToWrapper(Class<?> cls)", "testcase": false, "constructor": false, "invocations": ["isPrimitive", "get"]}