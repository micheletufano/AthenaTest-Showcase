{"identifier": "isSameLocalTime", "parameters": "(Calendar cal1, Calendar cal2)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n        if (cal1 == null || cal2 == null) {\n            throw new IllegalArgumentException(\"The date must not be null\");\n        }\n        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&\n                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&\n                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&\n                cal1.get(Calendar.HOUR_OF_DAY) == cal2.get(Calendar.HOUR_OF_DAY) &&\n                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&\n                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&\n                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&\n                cal1.getClass() == cal2.getClass());\n    }", "class": "DateUtils", "signature": "boolean isSameLocalTime(Calendar cal1, Calendar cal2)", "full_signature": "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)", "class_method_signature": "DateUtils.isSameLocalTime(Calendar cal1, Calendar cal2)", "testcase": false, "constructor": false, "invocations": ["get", "get", "get", "get", "get", "get", "get", "get", "get", "get", "get", "get", "get", "get", "getClass", "getClass"]}