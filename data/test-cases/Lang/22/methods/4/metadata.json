{"identifier": "getFraction", "parameters": "(String str)", "modifiers": "public static", "return": "Fraction", "body": "public static Fraction getFraction(String str) {\n        if (str == null) {\n            throw new IllegalArgumentException(\"The string must not be null\");\n        }\n        // parse double format\n        int pos = str.indexOf('.');\n        if (pos >= 0) {\n            return getFraction(Double.parseDouble(str));\n        }\n\n        // parse X Y/Z format\n        pos = str.indexOf(' ');\n        if (pos > 0) {\n            int whole = Integer.parseInt(str.substring(0, pos));\n            str = str.substring(pos + 1);\n            pos = str.indexOf('/');\n            if (pos < 0) {\n                throw new NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n            } else {\n                int numer = Integer.parseInt(str.substring(0, pos));\n                int denom = Integer.parseInt(str.substring(pos + 1));\n                return getFraction(whole, numer, denom);\n            }\n        }\n\n        // parse Y/Z format\n        pos = str.indexOf('/');\n        if (pos < 0) {\n            // simple whole number\n            return getFraction(Integer.parseInt(str), 1);\n        } else {\n            int numer = Integer.parseInt(str.substring(0, pos));\n            int denom = Integer.parseInt(str.substring(pos + 1));\n            return getFraction(numer, denom);\n        }\n    }", "class": "Fraction", "signature": "Fraction getFraction(String str)", "full_signature": "public static Fraction getFraction(String str)", "class_method_signature": "Fraction.getFraction(String str)", "testcase": false, "constructor": false, "invocations": ["indexOf", "getFraction", "parseDouble", "indexOf", "parseInt", "substring", "substring", "indexOf", "parseInt", "substring", "parseInt", "substring", "getFraction", "indexOf", "getFraction", "parseInt", "parseInt", "substring", "parseInt", "substring", "getFraction"]}