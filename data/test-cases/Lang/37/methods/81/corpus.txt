ArrayUtils { public static boolean contains(double[] array, double valueToFind, double tolerance) { return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND; } ArrayUtils(); static String toString(Object array); static String toString(Object array, String stringIfNull); static boolean isEquals(Object array1, Object array2); static Map<Object, Object> toMap(Object[] array); static T[] clone(T[] array); static long[] clone(long[] array); static int[] clone(int[] array); static short[] clone(short[] array); static char[] clone(char[] array); static byte[] clone(byte[] array); static double[] clone(double[] array); static float[] clone(float[] array); static boolean[] clone(boolean[] array); @SuppressWarnings("unchecked") static T[] subarray(T[] array, int startIndexInclusive, int endIndexExclusive); static long[] subarray(long[] array, int startIndexInclusive, int endIndexExclusive); static int[] subarray(int[] array, int startIndexInclusive, int endIndexExclusive); static short[] subarray(short[] array, int startIndexInclusive, int endIndexExclusive); static char[] subarray(char[] array, int startIndexInclusive, int endIndexExclusive); static byte[] subarray(byte[] array, int startIndexInclusive, int endIndexExclusive); static double[] subarray(double[] array, int startIndexInclusive, int endIndexExclusive); static float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive); static boolean[] subarray(boolean[] array, int startIndexInclusive, int endIndexExclusive); static boolean isSameLength(Object[] array1, Object[] array2); static boolean isSameLength(long[] array1, long[] array2); static boolean isSameLength(int[] array1, int[] array2); static boolean isSameLength(short[] array1, short[] array2); static boolean isSameLength(char[] array1, char[] array2); static boolean isSameLength(byte[] array1, byte[] array2); static boolean isSameLength(double[] array1, double[] array2); static boolean isSameLength(float[] array1, float[] array2); static boolean isSameLength(boolean[] array1, boolean[] array2); static int getLength(Object array); static boolean isSameType(Object array1, Object array2); static void reverse(Object[] array); static void reverse(long[] array); static void reverse(int[] array); static void reverse(short[] array); static void reverse(char[] array); static void reverse(byte[] array); static void reverse(double[] array); static void reverse(float[] array); static void reverse(boolean[] array); static int indexOf(Object[] array, Object objectToFind); static int indexOf(Object[] array, Object objectToFind, int startIndex); static int lastIndexOf(Object[] array, Object objectToFind); static int lastIndexOf(Object[] array, Object objectToFind, int startIndex); static boolean contains(Object[] array, Object objectToFind); static int indexOf(long[] array, long valueToFind); static int indexOf(long[] array, long valueToFind, int startIndex); static int lastIndexOf(long[] array, long valueToFind); static int lastIndexOf(long[] array, long valueToFind, int startIndex); static boolean contains(long[] array, long valueToFind); static int indexOf(int[] array, int valueToFind); static int indexOf(int[] array, int valueToFind, int startIndex); static int lastIndexOf(int[] array, int valueToFind); static int lastIndexOf(int[] array, int valueToFind, int startIndex); static boolean contains(int[] array, int valueToFind); static int indexOf(short[] array, short valueToFind); static int indexOf(short[] array, short valueToFind, int startIndex); static int lastIndexOf(short[] array, short valueToFind); static int lastIndexOf(short[] array, short valueToFind, int startIndex); static boolean contains(short[] array, short valueToFind); static int indexOf(char[] array, char valueToFind); static int indexOf(char[] array, char valueToFind, int startIndex); static int lastIndexOf(char[] array, char valueToFind); static int lastIndexOf(char[] array, char valueToFind, int startIndex); static boolean contains(char[] array, char valueToFind); static int indexOf(byte[] array, byte valueToFind); static int indexOf(byte[] array, byte valueToFind, int startIndex); static int lastIndexOf(byte[] array, byte valueToFind); static int lastIndexOf(byte[] array, byte valueToFind, int startIndex); static boolean contains(byte[] array, byte valueToFind); static int indexOf(double[] array, double valueToFind); static int indexOf(double[] array, double valueToFind, double tolerance); static int indexOf(double[] array, double valueToFind, int startIndex); static int indexOf(double[] array, double valueToFind, int startIndex, double tolerance); static int lastIndexOf(double[] array, double valueToFind); static int lastIndexOf(double[] array, double valueToFind, double tolerance); static int lastIndexOf(double[] array, double valueToFind, int startIndex); static int lastIndexOf(double[] array, double valueToFind, int startIndex, double tolerance); static boolean contains(double[] array, double valueToFind); static boolean contains(double[] array, double valueToFind, double tolerance); static int indexOf(float[] array, float valueToFind); static int indexOf(float[] array, float valueToFind, int startIndex); static int lastIndexOf(float[] array, float valueToFind); static int lastIndexOf(float[] array, float valueToFind, int startIndex); static boolean contains(float[] array, float valueToFind); static int indexOf(boolean[] array, boolean valueToFind); static int indexOf(boolean[] array, boolean valueToFind, int startIndex); static int lastIndexOf(boolean[] array, boolean valueToFind); static int lastIndexOf(boolean[] array, boolean valueToFind, int startIndex); static boolean contains(boolean[] array, boolean valueToFind); static char[] toPrimitive(Character[] array); static char[] toPrimitive(Character[] array, char valueForNull); static Character[] toObject(char[] array); static long[] toPrimitive(Long[] array); static long[] toPrimitive(Long[] array, long valueForNull); static Long[] toObject(long[] array); static int[] toPrimitive(Integer[] array); static int[] toPrimitive(Integer[] array, int valueForNull); static Integer[] toObject(int[] array); static short[] toPrimitive(Short[] array); static short[] toPrimitive(Short[] array, short valueForNull); static Short[] toObject(short[] array); static byte[] toPrimitive(Byte[] array); static byte[] toPrimitive(Byte[] array, byte valueForNull); static Byte[] toObject(byte[] array); static double[] toPrimitive(Double[] array); static double[] toPrimitive(Double[] array, double valueForNull); static Double[] toObject(double[] array); static float[] toPrimitive(Float[] array); static float[] toPrimitive(Float[] array, float valueForNull); static Float[] toObject(float[] array); static boolean[] toPrimitive(Boolean[] array); static boolean[] toPrimitive(Boolean[] array, boolean valueForNull); static Boolean[] toObject(boolean[] array); static boolean isEmpty(T[] array); static boolean isEmpty(long[] array); static boolean isEmpty(int[] array); static boolean isEmpty(short[] array); static boolean isEmpty(char[] array); static boolean isEmpty(byte[] array); static boolean isEmpty(double[] array); static boolean isEmpty(float[] array); static boolean isEmpty(boolean[] array); @SuppressWarnings("unchecked") static T[] addAll(T[] array1, T... array2); static boolean[] addAll(boolean[] array1, boolean... array2); static char[] addAll(char[] array1, char... array2); static byte[] addAll(byte[] array1, byte... array2); static short[] addAll(short[] array1, short... array2); static int[] addAll(int[] array1, int... array2); static long[] addAll(long[] array1, long... array2); static float[] addAll(float[] array1, float... array2); static double[] addAll(double[] array1, double... array2); @SuppressWarnings("unchecked") static T[] add(T[] array, T element); static boolean[] add(boolean[] array, boolean element); static byte[] add(byte[] array, byte element); static char[] add(char[] array, char element); static double[] add(double[] array, double element); static float[] add(float[] array, float element); static int[] add(int[] array, int element); static long[] add(long[] array, long element); static short[] add(short[] array, short element); @SuppressWarnings("unchecked") static T[] add(T[] array, int index, T element); static boolean[] add(boolean[] array, int index, boolean element); static char[] add(char[] array, int index, char element); static byte[] add(byte[] array, int index, byte element); static short[] add(short[] array, int index, short element); static int[] add(int[] array, int index, int element); static long[] add(long[] array, int index, long element); static float[] add(float[] array, int index, float element); static double[] add(double[] array, int index, double element); @SuppressWarnings("unchecked") static T[] remove(T[] array, int index); static T[] removeElement(T[] array, Object element); static boolean[] remove(boolean[] array, int index); static boolean[] removeElement(boolean[] array, boolean element); static byte[] remove(byte[] array, int index); static byte[] removeElement(byte[] array, byte element); static char[] remove(char[] array, int index); static char[] removeElement(char[] array, char element); static double[] remove(double[] array, int index); static double[] removeElement(double[] array, double element); static float[] remove(float[] array, int index); static float[] removeElement(float[] array, float element); static int[] remove(int[] array, int index); static int[] removeElement(int[] array, int element); static long[] remove(long[] array, int index); static long[] removeElement(long[] array, long element); static short[] remove(short[] array, int index); static short[] removeElement(short[] array, short element); static final Object[] EMPTY_OBJECT_ARRAY; static final Class<?>[] EMPTY_CLASS_ARRAY; static final String[] EMPTY_STRING_ARRAY; static final long[] EMPTY_LONG_ARRAY; static final Long[] EMPTY_LONG_OBJECT_ARRAY; static final int[] EMPTY_INT_ARRAY; static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY; static final short[] EMPTY_SHORT_ARRAY; static final Short[] EMPTY_SHORT_OBJECT_ARRAY; static final byte[] EMPTY_BYTE_ARRAY; static final Byte[] EMPTY_BYTE_OBJECT_ARRAY; static final double[] EMPTY_DOUBLE_ARRAY; static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY; static final float[] EMPTY_FLOAT_ARRAY; static final Float[] EMPTY_FLOAT_OBJECT_ARRAY; static final boolean[] EMPTY_BOOLEAN_ARRAY; static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY; static final char[] EMPTY_CHAR_ARRAY; static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY; static final int INDEX_NOT_FOUND; }