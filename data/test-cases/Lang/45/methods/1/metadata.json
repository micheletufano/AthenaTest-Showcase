{"identifier": "wrap", "parameters": "(String str, int wrapLength, String newLineStr, boolean wrapLongWords)", "modifiers": "public static", "return": "String", "body": "public static String wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords) {\n        if (str == null) {\n            return null;\n        }\n        if (newLineStr == null) {\n            newLineStr = SystemUtils.LINE_SEPARATOR;\n        }\n        if (wrapLength < 1) {\n            wrapLength = 1;\n        }\n        int inputLineLength = str.length();\n        int offset = 0;\n        StringBuffer wrappedLine = new StringBuffer(inputLineLength + 32);\n        \n        while ((inputLineLength - offset) > wrapLength) {\n            if (str.charAt(offset) == ' ') {\n                offset++;\n                continue;\n            }\n            int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);\n\n            if (spaceToWrapAt >= offset) {\n                // normal case\n                wrappedLine.append(str.substring(offset, spaceToWrapAt));\n                wrappedLine.append(newLineStr);\n                offset = spaceToWrapAt + 1;\n                \n            } else {\n                // really long word or URL\n                if (wrapLongWords) {\n                    // wrap really long word one line at a time\n                    wrappedLine.append(str.substring(offset, wrapLength + offset));\n                    wrappedLine.append(newLineStr);\n                    offset += wrapLength;\n                } else {\n                    // do not wrap really long word, just extend beyond limit\n                    spaceToWrapAt = str.indexOf(' ', wrapLength + offset);\n                    if (spaceToWrapAt >= 0) {\n                        wrappedLine.append(str.substring(offset, spaceToWrapAt));\n                        wrappedLine.append(newLineStr);\n                        offset = spaceToWrapAt + 1;\n                    } else {\n                        wrappedLine.append(str.substring(offset));\n                        offset = inputLineLength;\n                    }\n                }\n            }\n        }\n\n        // Whatever is left in line is short enough to just pass through\n        wrappedLine.append(str.substring(offset));\n\n        return wrappedLine.toString();\n    }", "class": "WordUtils", "signature": "String wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords)", "full_signature": "public static String wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords)", "class_method_signature": "WordUtils.wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords)", "testcase": false, "constructor": false, "invocations": ["length", "charAt", "lastIndexOf", "append", "substring", "append", "append", "substring", "append", "indexOf", "append", "substring", "append", "append", "substring", "append", "substring", "toString"]}