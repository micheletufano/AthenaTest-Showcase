{"identifier": "abbreviate", "parameters": "(String str, int lower, int upper, String appendToEnd)", "modifiers": "public static", "return": "String", "body": "public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n        // initial parameter checks\n        if (str == null) {\n            return null;\n        }\n        if (str.length() == 0) {\n            return StringUtils.EMPTY;\n        }\n\n        // if the lower value is greater than the length of the string,\n        // set to the length of the string\n        if (lower > str.length()) {\n            lower = str.length();    \n        }\n        // if the upper value is -1 (i.e. no limit) or is greater\n        // than the length of the string, set to the length of the string\n        if (upper == -1 || upper > str.length()) {\n            upper = str.length();\n        }\n        // if upper is less than lower, raise it to lower\n        if (upper < lower) {\n            upper = lower;\n        }\n\n        StringBuffer result = new StringBuffer();\n        int index = StringUtils.indexOf(str, \" \", lower);\n        if (index == -1) {\n            result.append(str.substring(0, upper));\n            // only if abbreviation has occured do we append the appendToEnd value\n            if (upper != str.length()) {\n                result.append(StringUtils.defaultString(appendToEnd));\n            }\n        } else if (index > upper) {\n            result.append(str.substring(0, upper));\n            result.append(StringUtils.defaultString(appendToEnd));\n        } else {\n            result.append(str.substring(0, index));\n            result.append(StringUtils.defaultString(appendToEnd));\n        }\n        return result.toString();\n    }", "class": "WordUtils", "signature": "String abbreviate(String str, int lower, int upper, String appendToEnd)", "full_signature": "public static String abbreviate(String str, int lower, int upper, String appendToEnd)", "class_method_signature": "WordUtils.abbreviate(String str, int lower, int upper, String appendToEnd)", "testcase": false, "constructor": false, "invocations": ["length", "length", "length", "length", "length", "indexOf", "append", "substring", "length", "append", "defaultString", "append", "substring", "append", "defaultString", "append", "substring", "append", "defaultString", "toString"]}