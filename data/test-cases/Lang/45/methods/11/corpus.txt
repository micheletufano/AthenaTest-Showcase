WordUtils { public static String abbreviate(String str, int lower, int upper, String appendToEnd) { if (str == null) { return null; } if (str.length() == 0) { return StringUtils.EMPTY; } if (lower > str.length()) { lower = str.length(); } if (upper == -1 || upper > str.length()) { upper = str.length(); } if (upper < lower) { upper = lower; } StringBuffer result = new StringBuffer(); int index = StringUtils.indexOf(str, " ", lower); if (index == -1) { result.append(str.substring(0, upper)); if (upper != str.length()) { result.append(StringUtils.defaultString(appendToEnd)); } } else if (index > upper) { result.append(str.substring(0, upper)); result.append(StringUtils.defaultString(appendToEnd)); } else { result.append(str.substring(0, index)); result.append(StringUtils.defaultString(appendToEnd)); } return result.toString(); } WordUtils(); static String wrap(String str, int wrapLength); static String wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords); static String capitalize(String str); static String capitalize(String str, char[] delimiters); static String capitalizeFully(String str); static String capitalizeFully(String str, char[] delimiters); static String uncapitalize(String str); static String uncapitalize(String str, char[] delimiters); static String swapCase(String str); static String initials(String str); static String initials(String str, char[] delimiters); static String abbreviate(String str, int lower, int upper, String appendToEnd); }