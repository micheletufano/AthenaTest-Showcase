FastDatePrinter implements DatePrinter, Serializable { @Override public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) { if (obj instanceof Date) { return format((Date) obj, toAppendTo); } else if (obj instanceof Calendar) { return format((Calendar) obj, toAppendTo); } else if (obj instanceof Long) { return format(((Long) obj).longValue(), toAppendTo); } else { throw new IllegalArgumentException("Unknown class: " + (obj == null ? "<null>" : obj.getClass().getName())); } } protected FastDatePrinter(String pattern, TimeZone timeZone, Locale locale); @Override StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos); @Override String format(long millis); @Override String format(Date date); @Override String format(Calendar calendar); @Override StringBuffer format(long millis, StringBuffer buf); @Override StringBuffer format(Date date, StringBuffer buf); @Override StringBuffer format(Calendar calendar, StringBuffer buf); @Override String getPattern(); @Override TimeZone getTimeZone(); @Override Locale getLocale(); int getMaxLengthEstimate(); @Override boolean equals(Object obj); @Override int hashCode(); @Override String toString(); static final int FULL; static final int LONG; static final int MEDIUM; static final int SHORT; }