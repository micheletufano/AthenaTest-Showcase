StringEscapeUtils { public static void unescapeCsv(Writer out, String str) throws IOException { if (str == null) { return; } if (str.length() < 2) { out.write(str); return; } if ( str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE ) { out.write(str); return; } String quoteless = str.substring(1, str.length() - 1); if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) { str = StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR); } out.write(str); } StringEscapeUtils(); static String escapeJava(String str); static void escapeJava(Writer out, String str); static String escapeJavaScript(String str); static void escapeJavaScript(Writer out, String str); static String unescapeJava(String str); static void unescapeJava(Writer out, String str); static String unescapeJavaScript(String str); static void unescapeJavaScript(Writer out, String str); static String escapeHtml(String str); static void escapeHtml(Writer writer, String string); static String unescapeHtml(String str); static void unescapeHtml(Writer writer, String string); static void escapeXml(Writer writer, String str); static String escapeXml(String str); static void unescapeXml(Writer writer, String str); static String unescapeXml(String str); static String escapeSql(String str); static String escapeCsv(String str); static void escapeCsv(Writer out, String str); static String unescapeCsv(String str); static void unescapeCsv(Writer out, String str); }