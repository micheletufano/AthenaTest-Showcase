{"identifier": "withCommentStart", "parameters": "(final Character commentStart)", "modifiers": "public", "return": "CSVFormat", "body": "public CSVFormat withCommentStart(final Character commentStart) {\n        if (isLineBreak(commentStart)) {\n            throw new IllegalArgumentException(\"The comment start character cannot be a line break\");\n        }\n        return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape,\n                ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord);\n    }", "class": "CSVFormat", "signature": "CSVFormat withCommentStart(final Character commentStart)", "full_signature": "public CSVFormat withCommentStart(final Character commentStart)", "class_method_signature": "CSVFormat.withCommentStart(final Character commentStart)", "testcase": false, "constructor": false, "invocations": ["isLineBreak"]}