{"identifier": "withEscape", "parameters": "(final Character escape)", "modifiers": "public", "return": "CSVFormat", "body": "public CSVFormat withEscape(final Character escape) {\n        if (isLineBreak(escape)) {\n            throw new IllegalArgumentException(\"The escape character cannot be a line break\");\n        }\n        return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escape, ignoreSurroundingSpaces,\n                ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord,\n                allowMissingColumnNames, ignoreHeaderCase);\n    }", "class": "CSVFormat", "signature": "CSVFormat withEscape(final Character escape)", "full_signature": "public CSVFormat withEscape(final Character escape)", "class_method_signature": "CSVFormat.withEscape(final Character escape)", "testcase": false, "constructor": false, "invocations": ["isLineBreak"]}