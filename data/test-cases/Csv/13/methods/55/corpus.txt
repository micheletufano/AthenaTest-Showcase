CSVPrinter implements Flushable, Closeable { public void printComment(final String comment) throws IOException { if (!format.isCommentMarkerSet()) { return; } if (!newRecord) { println(); } out.append(format.getCommentMarker().charValue()); out.append(SP); for (int i = 0; i < comment.length(); i++) { final char c = comment.charAt(i); switch (c) { case CR: if (i + 1 < comment.length() && comment.charAt(i + 1) == LF) { i++; } case LF: println(); out.append(format.getCommentMarker().charValue()); out.append(SP); break; default: out.append(c); break; } } println(); } CSVPrinter(final Appendable out, final CSVFormat format); @Override void close(); @Override void flush(); Appendable getOut(); void print(final Object value); void printComment(final String comment); void println(); void printRecord(final Iterable<?> values); void printRecord(final Object... values); void printRecords(final Iterable<?> values); void printRecords(final Object... values); void printRecords(final ResultSet resultSet); }