CSVFormat implements Serializable { public CSVFormat withHeaderComments(final Object... headerComments) { return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); } private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase); static CSVFormat newFormat(final char delimiter); static CSVFormat valueOf(final String format); @Override boolean equals(final Object obj); String format(final Object... values); Character getCommentMarker(); char getDelimiter(); Character getEscapeCharacter(); String[] getHeader(); String[] getHeaderComments(); boolean getAllowMissingColumnNames(); boolean getIgnoreEmptyLines(); boolean getIgnoreSurroundingSpaces(); boolean getIgnoreHeaderCase(); String getNullString(); Character getQuoteCharacter(); QuoteMode getQuoteMode(); String getRecordSeparator(); boolean getSkipHeaderRecord(); @Override int hashCode(); boolean isCommentMarkerSet(); boolean isEscapeCharacterSet(); boolean isNullStringSet(); boolean isQuoteCharacterSet(); CSVParser parse(final Reader in); CSVPrinter print(final Appendable out); @Override String toString(); CSVFormat withCommentMarker(final char commentMarker); CSVFormat withCommentMarker(final Character commentMarker); CSVFormat withDelimiter(final char delimiter); CSVFormat withEscape(final char escape); CSVFormat withEscape(final Character escape); CSVFormat withHeader(final String... header); CSVFormat withHeader(final ResultSet resultSet); CSVFormat withHeader(final ResultSetMetaData metaData); CSVFormat withHeaderComments(final Object... headerComments); CSVFormat withAllowMissingColumnNames(); CSVFormat withAllowMissingColumnNames(final boolean allowMissingColumnNames); CSVFormat withIgnoreEmptyLines(); CSVFormat withIgnoreEmptyLines(final boolean ignoreEmptyLines); CSVFormat withIgnoreSurroundingSpaces(); CSVFormat withIgnoreSurroundingSpaces(final boolean ignoreSurroundingSpaces); CSVFormat withIgnoreHeaderCase(); CSVFormat withIgnoreHeaderCase(final boolean ignoreHeaderCase); CSVFormat withNullString(final String nullString); CSVFormat withQuote(final char quoteChar); CSVFormat withQuote(final Character quoteChar); CSVFormat withQuoteMode(final QuoteMode quoteModePolicy); CSVFormat withRecordSeparator(final char recordSeparator); CSVFormat withRecordSeparator(final String recordSeparator); CSVFormat withSkipHeaderRecord(); CSVFormat withSkipHeaderRecord(final boolean skipHeaderRecord); static final CSVFormat DEFAULT; static final CSVFormat RFC4180; static final CSVFormat EXCEL; static final CSVFormat TDF; static final CSVFormat MYSQL; }