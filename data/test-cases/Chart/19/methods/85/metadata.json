{"identifier": "rendererChanged", "parameters": "(RendererChangeEvent event)", "modifiers": "public", "return": "void", "body": "public void rendererChanged(RendererChangeEvent event) {\n        Plot parent = getParent();\n        if (parent != null) {\n            if (parent instanceof RendererChangeListener) {\n                RendererChangeListener rcl = (RendererChangeListener) parent;\n                rcl.rendererChanged(event);\n            }\n            else {\n                // this should never happen with the existing code, but throw \n                // an exception in case future changes make it possible...\n                throw new RuntimeException(\n                    \"The renderer has changed and I don't know what to do!\");\n            }\n        }\n        else {\n            configureRangeAxes();\n            PlotChangeEvent e = new PlotChangeEvent(this);\n            notifyListeners(e);\n        }\n    }", "class": "CategoryPlot", "signature": "void rendererChanged(RendererChangeEvent event)", "full_signature": "public void rendererChanged(RendererChangeEvent event)", "class_method_signature": "CategoryPlot.rendererChanged(RendererChangeEvent event)", "testcase": false, "constructor": false, "invocations": ["getParent", "rendererChanged", "configureRangeAxes", "notifyListeners"]}