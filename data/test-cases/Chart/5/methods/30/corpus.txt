XYSeries extends Series implements Cloneable, Serializable { public int hashCode() { int result = super.hashCode(); int count = getItemCount(); if (count > 0) { XYDataItem item = getDataItem(0); result = 29 * result + item.hashCode(); } if (count > 1) { XYDataItem item = getDataItem(count - 1); result = 29 * result + item.hashCode(); } if (count > 2) { XYDataItem item = getDataItem(count / 2); result = 29 * result + item.hashCode(); } result = 29 * result + this.maximumItemCount; result = 29 * result + (this.autoSort ? 1 : 0); result = 29 * result + (this.allowDuplicateXValues ? 1 : 0); return result; } XYSeries(Comparable key); XYSeries(Comparable key, boolean autoSort); XYSeries(Comparable key, boolean autoSort, boolean allowDuplicateXValues); boolean getAutoSort(); boolean getAllowDuplicateXValues(); int getItemCount(); List getItems(); int getMaximumItemCount(); void setMaximumItemCount(int maximum); void add(XYDataItem item); void add(double x, double y); void add(double x, double y, boolean notify); void add(double x, Number y); void add(double x, Number y, boolean notify); void add(Number x, Number y); void add(Number x, Number y, boolean notify); void add(XYDataItem item, boolean notify); void delete(int start, int end); XYDataItem remove(int index); XYDataItem remove(Number x); void clear(); XYDataItem getDataItem(int index); Number getX(int index); Number getY(int index); void updateByIndex(int index, Number y); void update(Number x, Number y); XYDataItem addOrUpdate(double x, double y); XYDataItem addOrUpdate(Number x, Number y); int indexOf(Number x); double[][] toArray(); Object clone(); XYSeries createCopy(int start, int end); boolean equals(Object obj); int hashCode(); }