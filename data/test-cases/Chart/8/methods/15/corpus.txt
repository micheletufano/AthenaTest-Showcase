Week extends RegularTimePeriod implements Serializable { public static Week parseWeek(String s) { Week result = null; if (s != null) { s = s.trim(); int i = Week.findSeparator(s); if (i != -1) { String s1 = s.substring(0, i).trim(); String s2 = s.substring(i + 1, s.length()).trim(); Year y = Week.evaluateAsYear(s1); int w; if (y != null) { w = Week.stringToWeek(s2); if (w == -1) { throw new TimePeriodFormatException( "Can't evaluate the week."); } result = new Week(w, y); } else { y = Week.evaluateAsYear(s2); if (y != null) { w = Week.stringToWeek(s1); if (w == -1) { throw new TimePeriodFormatException( "Can't evaluate the week."); } result = new Week(w, y); } else { throw new TimePeriodFormatException( "Can't evaluate the year."); } } } else { throw new TimePeriodFormatException( "Could not find separator."); } } return result; } Week(); Week(int week, int year); Week(int week, Year year); Week(Date time); Week(Date time, TimeZone zone); Week(Date time, TimeZone zone, Locale locale); Year getYear(); int getYearValue(); int getWeek(); long getFirstMillisecond(); long getLastMillisecond(); void peg(Calendar calendar); RegularTimePeriod previous(); RegularTimePeriod next(); long getSerialIndex(); long getFirstMillisecond(Calendar calendar); long getLastMillisecond(Calendar calendar); String toString(); boolean equals(Object obj); int hashCode(); int compareTo(Object o1); static Week parseWeek(String s); static final int FIRST_WEEK_IN_YEAR; static final int LAST_WEEK_IN_YEAR; }