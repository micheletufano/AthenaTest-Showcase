{"identifier": "previous", "parameters": "()", "modifiers": "public", "return": "RegularTimePeriod", "body": "public RegularTimePeriod previous() {\n\n        Week result;\n        if (this.week != FIRST_WEEK_IN_YEAR) {\n            result = new Week(this.week - 1, this.year);\n        }\n        else {\n            // we need to work out if the previous year has 52 or 53 weeks...\n            if (this.year > 1900) {\n                int yy = this.year - 1;\n                Calendar prevYearCalendar = Calendar.getInstance();\n                prevYearCalendar.set(yy, Calendar.DECEMBER, 31);\n                result = new Week(prevYearCalendar.getActualMaximum(\n                        Calendar.WEEK_OF_YEAR), yy);\n            }\n            else {\n                result = null;\n            }\n        }\n        return result;\n\n    }", "class": "Week", "signature": "RegularTimePeriod previous()", "full_signature": "public RegularTimePeriod previous()", "class_method_signature": "Week.previous()", "testcase": false, "constructor": false, "invocations": ["getInstance", "set", "getActualMaximum"]}