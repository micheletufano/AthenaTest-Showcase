{"identifier": "render", "parameters": "(Graphics2D g2,\n                          Rectangle2D dataArea,\n                          int index,\n                          PlotRenderingInfo info,\n                          CrosshairState crosshairState)", "modifiers": "public", "return": "boolean", "body": "public boolean render(Graphics2D g2,\n                          Rectangle2D dataArea,\n                          int index,\n                          PlotRenderingInfo info,\n                          CrosshairState crosshairState) {\n\n        boolean foundData = false;\n        XYDataset dataset = getDataset(index);\n        if (!DatasetUtilities.isEmptyOrNull(dataset)) {\n            foundData = true;\n            ValueAxis xAxis = getDomainAxisForDataset(index);\n            ValueAxis yAxis = getRangeAxisForDataset(index);\n            XYItemRenderer renderer = getRenderer(index);\n            if (renderer == null) {\n                renderer = getRenderer();\n                if (renderer == null) { // no default renderer available\n                    return foundData;\n                }\n            }\n\n            XYItemRendererState state = renderer.initialise(g2, dataArea, this,\n                    dataset, info);\n            int passCount = renderer.getPassCount();\n\n            SeriesRenderingOrder seriesOrder = getSeriesRenderingOrder();\n            if (seriesOrder == SeriesRenderingOrder.REVERSE) {\n                //render series in reverse order\n                for (int pass = 0; pass < passCount; pass++) {\n                    int seriesCount = dataset.getSeriesCount();\n                    for (int series = seriesCount - 1; series >= 0; series--) {\n                        int firstItem = 0;\n                        int lastItem = dataset.getItemCount(series) - 1;\n                        if (lastItem == -1) {\n                            continue;\n                        }\n                        if (state.getProcessVisibleItemsOnly()) {\n                            int[] itemBounds = RendererUtilities.findLiveItems(\n                                    dataset, series, xAxis.getLowerBound(), \n                                    xAxis.getUpperBound());\n                            firstItem = itemBounds[0];\n                            lastItem = itemBounds[1];\n                        }\n                        for (int item = firstItem; item <= lastItem; item++) {\n                            renderer.drawItem(g2, state, dataArea, info,\n                                    this, xAxis, yAxis, dataset, series, item,\n                                    crosshairState, pass);\n                        }\n                    }\n                }\n            }\n            else {\n                //render series in forward order\n                for (int pass = 0; pass < passCount; pass++) {\n                    int seriesCount = dataset.getSeriesCount();\n                    for (int series = 0; series < seriesCount; series++) {\n                        int firstItem = 0;\n                        int lastItem = dataset.getItemCount(series) - 1;\n                        if (state.getProcessVisibleItemsOnly()) {\n                            int[] itemBounds = RendererUtilities.findLiveItems(\n                                    dataset, series, xAxis.getLowerBound(), \n                                    xAxis.getUpperBound());\n                            firstItem = itemBounds[0];\n                            lastItem = itemBounds[1];\n                        }\n                        for (int item = firstItem; item <= lastItem; item++) {\n                            renderer.drawItem(g2, state, dataArea, info,\n                                    this, xAxis, yAxis, dataset, series, item,\n                                    crosshairState, pass);\n                        }\n                    }\n                }\n            }\n        }\n        return foundData;\n    }", "class": "XYPlot", "signature": "boolean render(Graphics2D g2,\n                          Rectangle2D dataArea,\n                          int index,\n                          PlotRenderingInfo info,\n                          CrosshairState crosshairState)", "full_signature": "public boolean render(Graphics2D g2,\n                          Rectangle2D dataArea,\n                          int index,\n                          PlotRenderingInfo info,\n                          CrosshairState crosshairState)", "class_method_signature": "XYPlot.render(Graphics2D g2,\n                          Rectangle2D dataArea,\n                          int index,\n                          PlotRenderingInfo info,\n                          CrosshairState crosshairState)", "testcase": false, "constructor": false, "invocations": ["getDataset", "isEmptyOrNull", "getDomainAxisForDataset", "getRangeAxisForDataset", "getRenderer", "getRenderer", "initialise", "getPassCount", "getSeriesRenderingOrder", "getSeriesCount", "getItemCount", "getProcessVisibleItemsOnly", "findLiveItems", "getLowerBound", "getUpperBound", "drawItem", "getSeriesCount", "getItemCount", "getProcessVisibleItemsOnly", "findLiveItems", "getLowerBound", "getUpperBound", "drawItem"]}