{"identifier": "removeRangeMarker", "parameters": "(int index, Marker marker, Layer layer,\n    \t\tboolean notify)", "modifiers": "public", "return": "boolean", "body": "public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n    \t\tboolean notify) {\n        if (marker == null) {\n            throw new IllegalArgumentException(\"Null 'marker' argument.\");\n        }\n        ArrayList markers;\n        if (layer == Layer.FOREGROUND) {\n            markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(\n                    index));\n        }\n        else {\n            markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(\n                    index));\n        }\n        if (markers == null) {\n            return false;\n        }\n        boolean removed = markers.remove(marker);\n        if (removed && notify) {\n            fireChangeEvent();\n        }\n        return removed;\n    }", "class": "XYPlot", "signature": "boolean removeRangeMarker(int index, Marker marker, Layer layer,\n    \t\tboolean notify)", "full_signature": "public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n    \t\tboolean notify)", "class_method_signature": "XYPlot.removeRangeMarker(int index, Marker marker, Layer layer,\n    \t\tboolean notify)", "testcase": false, "constructor": false, "invocations": ["get", "get", "remove", "fireChangeEvent"]}