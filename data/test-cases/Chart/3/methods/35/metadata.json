{"identifier": "removeAgedItems", "parameters": "(long latest, boolean notify)", "modifiers": "public", "return": "void", "body": "public void removeAgedItems(long latest, boolean notify) {\n        if (this.data.isEmpty()) {\n            return;  // nothing to do\n        }\n        // find the serial index of the period specified by 'latest'\n        long index = Long.MAX_VALUE;\n        try {\n            Method m = RegularTimePeriod.class.getDeclaredMethod(\n                    \"createInstance\", new Class[] {Class.class, Date.class,\n                    TimeZone.class});\n            RegularTimePeriod newest = (RegularTimePeriod) m.invoke(\n                    this.timePeriodClass, new Object[] {this.timePeriodClass,\n                            new Date(latest), TimeZone.getDefault()});\n            index = newest.getSerialIndex();\n        }\n        catch (NoSuchMethodException e) {\n            e.printStackTrace();\n        }\n        catch (IllegalAccessException e) {\n            e.printStackTrace();\n        }\n        catch (InvocationTargetException e) {\n            e.printStackTrace();\n        }\n\n        // check if there are any values earlier than specified by the history\n        // count...\n        boolean removed = false;\n        while (getItemCount() > 0 && (index\n                - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) {\n            this.data.remove(0);\n            removed = true;\n        }\n        if (removed) {\n            findBoundsByIteration();\n            if (notify) {\n                fireSeriesChanged();\n            }\n        }\n    }", "class": "TimeSeries", "signature": "void removeAgedItems(long latest, boolean notify)", "full_signature": "public void removeAgedItems(long latest, boolean notify)", "class_method_signature": "TimeSeries.removeAgedItems(long latest, boolean notify)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getDeclaredMethod", "invoke", "getDefault", "getSerialIndex", "printStackTrace", "printStackTrace", "printStackTrace", "getItemCount", "getSerialIndex", "getTimePeriod", "remove", "findBoundsByIteration", "fireSeriesChanged"]}