{"identifier": "findCumulativeRangeBounds", "parameters": "(CategoryDataset dataset)", "modifiers": "public static", "return": "Range", "body": "public static Range findCumulativeRangeBounds(CategoryDataset dataset) {\n        if (dataset == null) {\n            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n        }\n        boolean allItemsNull = true; // we'll set this to false if there is at\n                                     // least one non-null data item...\n        double minimum = 0.0;\n        double maximum = 0.0;\n        for (int row = 0; row < dataset.getRowCount(); row++) {\n            double runningTotal = 0.0;\n            for (int column = 0; column <= dataset.getColumnCount() - 1;\n                 column++) {\n                Number n = dataset.getValue(row, column);\n                if (n != null) {\n                    allItemsNull = false;\n                    double value = n.doubleValue();\n                    if (!Double.isNaN(value)) {\n                        runningTotal = runningTotal + value;\n                        minimum = Math.min(minimum, runningTotal);\n                        maximum = Math.max(maximum, runningTotal);\n                    }\n                }\n            }\n        }\n        if (!allItemsNull) {\n            return new Range(minimum, maximum);\n        }\n        else {\n            return null;\n        }\n    }", "class": "DatasetUtilities", "signature": "Range findCumulativeRangeBounds(CategoryDataset dataset)", "full_signature": "public static Range findCumulativeRangeBounds(CategoryDataset dataset)", "class_method_signature": "DatasetUtilities.findCumulativeRangeBounds(CategoryDataset dataset)", "testcase": false, "constructor": false, "invocations": ["getRowCount", "getColumnCount", "getValue", "doubleValue", "isNaN", "min", "max"]}