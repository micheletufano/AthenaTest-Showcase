{"identifier": "findMaximumStackedRangeValue", "parameters": "(CategoryDataset dataset)", "modifiers": "public static", "return": "Number", "body": "public static Number findMaximumStackedRangeValue(CategoryDataset dataset) {\n        if (dataset == null) {\n            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n        }\n        Number result = null;\n        boolean hasValidData = false;\n        double maximum = 0.0;\n        int categoryCount = dataset.getColumnCount();\n        for (int item = 0; item < categoryCount; item++) {\n            double total = 0.0;\n            int seriesCount = dataset.getRowCount();\n            for (int series = 0; series < seriesCount; series++) {\n                Number number = dataset.getValue(series, item);\n                if (number != null) {\n                    hasValidData = true;\n                    double value = number.doubleValue();\n                    if (value > 0.0) {\n                        total = total + value;\n                    }\n                }\n            }\n            maximum = Math.max(maximum, total);\n        }\n        if (hasValidData) {\n            result = new Double(maximum);\n        }\n        return result;\n    }", "class": "DatasetUtilities", "signature": "Number findMaximumStackedRangeValue(CategoryDataset dataset)", "full_signature": "public static Number findMaximumStackedRangeValue(CategoryDataset dataset)", "class_method_signature": "DatasetUtilities.findMaximumStackedRangeValue(CategoryDataset dataset)", "testcase": false, "constructor": false, "invocations": ["getColumnCount", "getRowCount", "getValue", "doubleValue", "max"]}