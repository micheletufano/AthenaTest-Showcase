{"identifier": "sampleFunction2DToSeries", "parameters": "(Function2D f,\n            double start, double end, int samples, Comparable seriesKey)", "modifiers": "public static", "return": "XYSeries", "body": "public static XYSeries sampleFunction2DToSeries(Function2D f,\n            double start, double end, int samples, Comparable seriesKey) {\n\n        if (f == null) {\n            throw new IllegalArgumentException(\"Null 'f' argument.\");\n        }\n        if (seriesKey == null) {\n            throw new IllegalArgumentException(\"Null 'seriesKey' argument.\");\n        }\n        if (start >= end) {\n            throw new IllegalArgumentException(\"Requires 'start' < 'end'.\");\n        }\n        if (samples < 2) {\n            throw new IllegalArgumentException(\"Requires 'samples' > 1\");\n        }\n\n        XYSeries series = new XYSeries(seriesKey);\n        double step = (end - start) / (samples - 1);\n        for (int i = 0; i < samples; i++) {\n            double x = start + (step * i);\n            series.add(x, f.getValue(x));\n        }\n        return series;\n    }", "class": "DatasetUtilities", "signature": "XYSeries sampleFunction2DToSeries(Function2D f,\n            double start, double end, int samples, Comparable seriesKey)", "full_signature": "public static XYSeries sampleFunction2DToSeries(Function2D f,\n            double start, double end, int samples, Comparable seriesKey)", "class_method_signature": "DatasetUtilities.sampleFunction2DToSeries(Function2D f,\n            double start, double end, int samples, Comparable seriesKey)", "testcase": false, "constructor": false, "invocations": ["add", "getValue"]}