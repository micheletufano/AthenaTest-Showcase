{"identifier": "createConsolidatedPieDataset", "parameters": "(PieDataset source,\n            Comparable key, double minimumPercent, int minItems)", "modifiers": "public static", "return": "PieDataset", "body": "public static PieDataset createConsolidatedPieDataset(PieDataset source,\n            Comparable key, double minimumPercent, int minItems) {\n\n        DefaultPieDataset result = new DefaultPieDataset();\n        double total = DatasetUtilities.calculatePieDatasetTotal(source);\n\n        //  Iterate and find all keys below threshold percentThreshold\n        List keys = source.getKeys();\n        ArrayList otherKeys = new ArrayList();\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable currentKey = (Comparable) iterator.next();\n            Number dataValue = source.getValue(currentKey);\n            if (dataValue != null) {\n                double value = dataValue.doubleValue();\n                if (value / total < minimumPercent) {\n                    otherKeys.add(currentKey);\n                }\n            }\n        }\n\n        //  Create new dataset with keys above threshold percentThreshold\n        iterator = keys.iterator();\n        double otherValue = 0;\n        while (iterator.hasNext()) {\n            Comparable currentKey = (Comparable) iterator.next();\n            Number dataValue = source.getValue(currentKey);\n            if (dataValue != null) {\n                if (otherKeys.contains(currentKey)\n                    && otherKeys.size() >= minItems) {\n                    //  Do not add key to dataset\n                    otherValue += dataValue.doubleValue();\n                }\n                else {\n                    //  Add key to dataset\n                    result.setValue(currentKey, dataValue);\n                }\n            }\n        }\n        //  Add other category if applicable\n        if (otherKeys.size() >= minItems) {\n            result.setValue(key, otherValue);\n        }\n        return result;\n    }", "class": "DatasetUtilities", "signature": "PieDataset createConsolidatedPieDataset(PieDataset source,\n            Comparable key, double minimumPercent, int minItems)", "full_signature": "public static PieDataset createConsolidatedPieDataset(PieDataset source,\n            Comparable key, double minimumPercent, int minItems)", "class_method_signature": "DatasetUtilities.createConsolidatedPieDataset(PieDataset source,\n            Comparable key, double minimumPercent, int minItems)", "testcase": false, "constructor": false, "invocations": ["calculatePieDatasetTotal", "getKeys", "iterator", "hasNext", "next", "getValue", "doubleValue", "add", "iterator", "hasNext", "next", "getValue", "contains", "size", "doubleValue", "setValue", "size", "setValue"]}