{"identifier": "findMinimumRangeValue", "parameters": "(XYDataset dataset)", "modifiers": "public static", "return": "Number", "body": "public static Number findMinimumRangeValue(XYDataset dataset) {\n\n        if (dataset == null) {\n            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n        }\n\n        // work out the minimum value...\n        if (dataset instanceof RangeInfo) {\n            RangeInfo info = (RangeInfo) dataset;\n            return new Double(info.getRangeLowerBound(true));\n        }\n\n        // hasn't implemented RangeInfo, so we'll have to iterate...\n        else {\n            double minimum = Double.POSITIVE_INFINITY;\n            int seriesCount = dataset.getSeriesCount();\n            for (int series = 0; series < seriesCount; series++) {\n                int itemCount = dataset.getItemCount(series);\n                for (int item = 0; item < itemCount; item++) {\n\n                    double value;\n                    if (dataset instanceof IntervalXYDataset) {\n                        IntervalXYDataset intervalXYData\n                                = (IntervalXYDataset) dataset;\n                        value = intervalXYData.getStartYValue(series, item);\n                    }\n                    else if (dataset instanceof OHLCDataset) {\n                        OHLCDataset highLowData = (OHLCDataset) dataset;\n                        value = highLowData.getLowValue(series, item);\n                    }\n                    else {\n                        value = dataset.getYValue(series, item);\n                    }\n                    if (!Double.isNaN(value)) {\n                        minimum = Math.min(minimum, value);\n                    }\n\n                }\n            }\n            if (minimum == Double.POSITIVE_INFINITY) {\n                return null;\n            }\n            else {\n                return new Double(minimum);\n            }\n\n        }\n\n    }", "class": "DatasetUtilities", "signature": "Number findMinimumRangeValue(XYDataset dataset)", "full_signature": "public static Number findMinimumRangeValue(XYDataset dataset)", "class_method_signature": "DatasetUtilities.findMinimumRangeValue(XYDataset dataset)", "testcase": false, "constructor": false, "invocations": ["getRangeLowerBound", "getSeriesCount", "getItemCount", "getStartYValue", "getLowValue", "getYValue", "isNaN", "min"]}