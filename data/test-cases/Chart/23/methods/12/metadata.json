{"identifier": "drawItem", "parameters": "(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            int pass)", "modifiers": "public", "return": "void", "body": "public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            int pass) {\n\n        // first check the number we are plotting...\n        Number value = dataset.getValue(row, column);\n        if (value != null) {\n            // current data point...\n            double x1 = domainAxis.getCategoryMiddle(column, getColumnCount(), \n                    dataArea, plot.getDomainAxisEdge());\n            double y1 = rangeAxis.valueToJava2D(value.doubleValue(), dataArea, \n                    plot.getRangeAxisEdge());\n            g2.setPaint(getItemPaint(row, column));\n            g2.setStroke(getItemStroke(row, column));\n            Shape shape = null;\n            shape = new Rectangle2D.Double(x1 - 4, y1 - 4, 8.0, 8.0);\n            \n            PlotOrientation orient = plot.getOrientation();\n            if (orient == PlotOrientation.VERTICAL) {\n                this.objectIcon.paintIcon(null, g2, (int) x1, (int) y1);\n            }\n            else {\n                this.objectIcon.paintIcon(null, g2, (int) y1, (int) x1);                \n            }\n            \n            if (this.lastCategory == column) {\n                if (this.min > value.doubleValue()) {\n                    this.min = value.doubleValue();\n                }\n                if (this.max < value.doubleValue()) {\n                    this.max = value.doubleValue();\n                }\n                \n                // last series, so we are ready to draw the min and max\n                if (dataset.getRowCount() - 1 == row) {\n                    g2.setPaint(this.groupPaint);\n                    g2.setStroke(this.groupStroke);\n                    double minY = rangeAxis.valueToJava2D(this.min, dataArea, \n                            plot.getRangeAxisEdge());\n                    double maxY = rangeAxis.valueToJava2D(this.max, dataArea, \n                            plot.getRangeAxisEdge());\n                    \n                    if (orient == PlotOrientation.VERTICAL) {\n                        g2.draw(new Line2D.Double(x1, minY, x1, maxY));\n                        this.minIcon.paintIcon(null, g2, (int) x1, (int) minY);\n                        this.maxIcon.paintIcon(null, g2, (int) x1, (int) maxY);\n                    }\n                    else {\n                        g2.draw(new Line2D.Double(minY, x1, maxY, x1));\n                        this.minIcon.paintIcon(null, g2, (int) minY, (int) x1);\n                        this.maxIcon.paintIcon(null, g2, (int) maxY, (int) x1);                        \n                    }\n                }\n            }\n            else {  // reset the min and max\n                this.lastCategory = column;\n                this.min = value.doubleValue();\n                this.max = value.doubleValue();\n            }\n            \n            // connect to the previous point\n            if (this.plotLines) {\n                if (column != 0) {\n                    Number previousValue = dataset.getValue(row, column - 1);\n                    if (previousValue != null) {\n                        // previous data point...\n                        double previous = previousValue.doubleValue();\n                        double x0 = domainAxis.getCategoryMiddle(column - 1, \n                                getColumnCount(), dataArea,\n                                plot.getDomainAxisEdge());\n                        double y0 = rangeAxis.valueToJava2D(previous, dataArea,\n                                plot.getRangeAxisEdge());\n                        g2.setPaint(getItemPaint(row, column));\n                        g2.setStroke(getItemStroke(row, column));\n                        Line2D line;\n                        if (orient == PlotOrientation.VERTICAL) {\n                            line = new Line2D.Double(x0, y0, x1, y1);\n                        }\n                        else {\n                            line = new Line2D.Double(y0, x0, y1, x1);                            \n                        }\n                        g2.draw(line);\n                    }\n                }\n            }\n\n            // add an item entity, if this information is being collected\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null && shape != null) {\n                addItemEntity(entities, dataset, row, column, shape);\n            }\n        }\n    }", "class": "MinMaxCategoryRenderer", "signature": "void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            int pass)", "full_signature": "public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            int pass)", "class_method_signature": "MinMaxCategoryRenderer.drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            int pass)", "testcase": false, "constructor": false, "invocations": ["getValue", "getCategoryMiddle", "getColumnCount", "getDomainAxisEdge", "valueToJava2D", "doubleValue", "getRangeAxisEdge", "setPaint", "getItemPaint", "setStroke", "getItemStroke", "getOrientation", "paintIcon", "paintIcon", "doubleValue", "doubleValue", "doubleValue", "doubleValue", "getRowCount", "setPaint", "setStroke", "valueToJava2D", "getRangeAxisEdge", "valueToJava2D", "getRangeAxisEdge", "draw", "paintIcon", "paintIcon", "draw", "paintIcon", "paintIcon", "doubleValue", "doubleValue", "getValue", "doubleValue", "getCategoryMiddle", "getColumnCount", "getDomainAxisEdge", "valueToJava2D", "getRangeAxisEdge", "setPaint", "getItemPaint", "setStroke", "getItemStroke", "draw", "getEntityCollection", "addItemEntity"]}