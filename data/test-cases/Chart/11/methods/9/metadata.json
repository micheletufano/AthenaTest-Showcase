{"identifier": "rotateShape", "parameters": "(Shape base, double angle,\n                                    float x, float y)", "modifiers": "public static", "return": "Shape", "body": "public static Shape rotateShape(Shape base, double angle,\n                                    float x, float y) {\n        if (base == null) {\n            return null;\n        }\n        AffineTransform rotate = AffineTransform.getRotateInstance(angle, x, y);\n        Shape result = rotate.createTransformedShape(base);\n        return result;\n    }", "class": "ShapeUtilities", "signature": "Shape rotateShape(Shape base, double angle,\n                                    float x, float y)", "full_signature": "public static Shape rotateShape(Shape base, double angle,\n                                    float x, float y)", "class_method_signature": "ShapeUtilities.rotateShape(Shape base, double angle,\n                                    float x, float y)", "testcase": false, "constructor": false, "invocations": ["getRotateInstance", "createTransformedShape"]}