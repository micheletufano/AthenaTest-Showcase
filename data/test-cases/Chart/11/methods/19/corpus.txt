ShapeUtilities { public static boolean intersects(Rectangle2D rect1, Rectangle2D rect2) { double x0 = rect1.getX(); double y0 = rect1.getY(); double x = rect2.getX(); double width = rect2.getWidth(); double y = rect2.getY(); double height = rect2.getHeight(); return (x + width >= x0 && y + height >= y0 && x <= x0 + rect1.getWidth() && y <= y0 + rect1.getHeight()); } private ShapeUtilities(); static Shape clone(Shape shape); static boolean equal(Shape s1, Shape s2); static boolean equal(Line2D l1, Line2D l2); static boolean equal(Ellipse2D e1, Ellipse2D e2); static boolean equal(Arc2D a1, Arc2D a2); static boolean equal(Polygon p1, Polygon p2); static boolean equal(GeneralPath p1, GeneralPath p2); static Shape createTranslatedShape(Shape shape, double transX, double transY); static Shape createTranslatedShape(Shape shape, RectangleAnchor anchor, double locationX, double locationY); static Shape rotateShape(Shape base, double angle, float x, float y); static void drawRotatedShape(Graphics2D g2, Shape shape, double angle, float x, float y); static Shape createDiagonalCross(float l, float t); static Shape createRegularCross(float l, float t); static Shape createDiamond(float s); static Shape createUpTriangle(float s); static Shape createDownTriangle(float s); static Shape createLineRegion(Line2D line, float width); static Point2D getPointInRectangle(double x, double y, Rectangle2D area); static boolean contains(Rectangle2D rect1, Rectangle2D rect2); static boolean intersects(Rectangle2D rect1, Rectangle2D rect2); }