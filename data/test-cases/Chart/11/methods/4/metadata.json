{"identifier": "equal", "parameters": "(Arc2D a1, Arc2D a2)", "modifiers": "public static", "return": "boolean", "body": "public static boolean equal(Arc2D a1, Arc2D a2) {\n        if (a1 == null) {\n            return (a2 == null);\n        }\n        if (a2 == null) {\n            return false;\n        }\n        if (!a1.getFrame().equals(a2.getFrame())) {\n            return false;\n        }\n        if (a1.getAngleStart() != a2.getAngleStart()) {\n            return false;\n        }\n        if (a1.getAngleExtent() != a2.getAngleExtent()) {\n            return false;\n        }\n        if (a1.getArcType() != a2.getArcType()) {\n            return false;\n        }\n        return true;\n    }", "class": "ShapeUtilities", "signature": "boolean equal(Arc2D a1, Arc2D a2)", "full_signature": "public static boolean equal(Arc2D a1, Arc2D a2)", "class_method_signature": "ShapeUtilities.equal(Arc2D a1, Arc2D a2)", "testcase": false, "constructor": false, "invocations": ["equals", "getFrame", "getFrame", "getAngleStart", "getAngleStart", "getAngleExtent", "getAngleExtent", "getArcType", "getArcType"]}