{"identifier": "select", "parameters": "(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "modifiers": "public", "return": "void", "body": "public void select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source) {\n        // cycle through the datasets and change the selection state for the\n        // items that fall within the specified region\n        int datasetCount = this.datasets.size();\n        for (int d = 0; d < datasetCount; d++) {\n            XYDataset dataset = (XYDataset) this.datasets.get(d);\n            if (dataset == null) {\n                continue;\n            }\n            XYDatasetSelectionState state = findSelectionStateForDataset(\n                    dataset, source);\n            if (state == null) {\n                continue;\n            }\n            GeneralPath path = convertToDataSpace(region, dataArea, dataset);\n            // now we have to iterate over all the dataset values and\n            // convert each point to Java2D space and then check if it should\n            // be selected.\n            int seriesCount = dataset.getSeriesCount();\n            for (int s = 0; s < seriesCount; s++) {\n                int itemCount = dataset.getItemCount(s);\n                for (int i = 0; i < itemCount; i++) {\n                    double x = dataset.getXValue(s, i);\n                    double y = dataset.getYValue(s, i);\n                    if (path.contains(x, y)) {\n                        state.setSelected(s, i, true);\n                        // FIXME:  we should fire just one dataset change event\n                        // for the whole selection\n                    }\n                }\n            }\n        }\n    }", "class": "XYPlot", "signature": "void select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "full_signature": "public void select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "class_method_signature": "XYPlot.select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "testcase": false, "constructor": false, "invocations": ["size", "get", "findSelectionStateForDataset", "convertToDataSpace", "getSeriesCount", "getItemCount", "getXValue", "getYValue", "contains", "setSelected"]}