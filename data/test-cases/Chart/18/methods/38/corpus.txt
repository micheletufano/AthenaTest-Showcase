DefaultKeyedValues2D implements KeyedValues2D, PublicCloneable, Cloneable, Serializable { public boolean equals(Object o) { if (o == null) { return false; } if (o == this) { return true; } if (!(o instanceof KeyedValues2D)) { return false; } KeyedValues2D kv2D = (KeyedValues2D) o; if (!getRowKeys().equals(kv2D.getRowKeys())) { return false; } if (!getColumnKeys().equals(kv2D.getColumnKeys())) { return false; } int rowCount = getRowCount(); if (rowCount != kv2D.getRowCount()) { return false; } int colCount = getColumnCount(); if (colCount != kv2D.getColumnCount()) { return false; } for (int r = 0; r < rowCount; r++) { for (int c = 0; c < colCount; c++) { Number v1 = getValue(r, c); Number v2 = kv2D.getValue(r, c); if (v1 == null) { if (v2 != null) { return false; } } else { if (!v1.equals(v2)) { return false; } } } } return true; } DefaultKeyedValues2D(); DefaultKeyedValues2D(boolean sortRowKeys); int getRowCount(); int getColumnCount(); Number getValue(int row, int column); Comparable getRowKey(int row); int getRowIndex(Comparable key); List getRowKeys(); Comparable getColumnKey(int column); int getColumnIndex(Comparable key); List getColumnKeys(); Number getValue(Comparable rowKey, Comparable columnKey); void addValue(Number value, Comparable rowKey, Comparable columnKey); void setValue(Number value, Comparable rowKey, Comparable columnKey); void removeValue(Comparable rowKey, Comparable columnKey); void removeRow(int rowIndex); void removeRow(Comparable rowKey); void removeColumn(int columnIndex); void removeColumn(Comparable columnKey); void clear(); boolean equals(Object o); int hashCode(); Object clone(); }