DefaultKeyedValues implements KeyedValues, Cloneable, PublicCloneable, Serializable { public void setValue(Comparable key, Number value) { if (key == null) { throw new IllegalArgumentException("Null 'key' argument."); } int keyIndex = getIndex(key); if (keyIndex >= 0) { this.keys.set(keyIndex, key); this.values.set(keyIndex, value); } else { this.keys.add(key); this.values.add(value); this.indexMap.put(key, new Integer(this.keys.size() - 1)); } } DefaultKeyedValues(); int getItemCount(); Number getValue(int item); Comparable getKey(int index); int getIndex(Comparable key); List getKeys(); Number getValue(Comparable key); void addValue(Comparable key, double value); void addValue(Comparable key, Number value); void setValue(Comparable key, double value); void setValue(Comparable key, Number value); void insertValue(int position, Comparable key, double value); void insertValue(int position, Comparable key, Number value); void removeValue(int index); void removeValue(Comparable key); void clear(); void sortByKeys(SortOrder order); void sortByValues(SortOrder order); boolean equals(Object obj); int hashCode(); Object clone(); }