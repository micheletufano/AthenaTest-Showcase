{"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n\n        if (!(obj instanceof KeyedValues)) {\n            return false;\n        }\n\n        KeyedValues that = (KeyedValues) obj;\n        int count = getItemCount();\n        if (count != that.getItemCount()) {\n            return false;\n        }\n\n        for (int i = 0; i < count; i++) {\n            Comparable k1 = getKey(i);\n            Comparable k2 = that.getKey(i);\n            if (!k1.equals(k2)) {\n                return false;\n            }\n            Number v1 = getValue(i);\n            Number v2 = that.getValue(i);\n            if (v1 == null) {\n                if (v2 != null) {\n                    return false;\n                }\n            }\n            else {\n                if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }", "class": "DefaultKeyedValues", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "DefaultKeyedValues.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["getItemCount", "getItemCount", "getKey", "getKey", "equals", "getValue", "getValue", "equals"]}