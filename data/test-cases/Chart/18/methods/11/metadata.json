{"identifier": "insertValue", "parameters": "(int position, Comparable key, Number value)", "modifiers": "public", "return": "void", "body": "public void insertValue(int position, Comparable key, Number value) {\n        if (position < 0 || position > getItemCount()) {\n            throw new IllegalArgumentException(\"'position' out of bounds.\");\n        }\n        if (key == null) {\n            throw new IllegalArgumentException(\"Null 'key' argument.\");\n        }\n        int pos = getIndex(key);\n        if (pos == position) {\n            this.keys.set(pos, key);\n            this.values.set(pos, value);\n        }\n        else {\n            if (pos >= 0) {\n                this.keys.remove(pos);\n                this.values.remove(pos);\n            }\n          \n            this.keys.add(position, key);\n            this.values.add(position, value);\n            rebuildIndex();\n        }\n    }", "class": "DefaultKeyedValues", "signature": "void insertValue(int position, Comparable key, Number value)", "full_signature": "public void insertValue(int position, Comparable key, Number value)", "class_method_signature": "DefaultKeyedValues.insertValue(int position, Comparable key, Number value)", "testcase": false, "constructor": false, "invocations": ["getItemCount", "getIndex", "set", "set", "remove", "remove", "add", "add", "rebuildIndex"]}