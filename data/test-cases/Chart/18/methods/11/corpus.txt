DefaultKeyedValues implements KeyedValues, Cloneable, PublicCloneable, Serializable { public void insertValue(int position, Comparable key, Number value) { if (position < 0 || position > getItemCount()) { throw new IllegalArgumentException("'position' out of bounds."); } if (key == null) { throw new IllegalArgumentException("Null 'key' argument."); } int pos = getIndex(key); if (pos == position) { this.keys.set(pos, key); this.values.set(pos, value); } else { if (pos >= 0) { this.keys.remove(pos); this.values.remove(pos); } this.keys.add(position, key); this.values.add(position, value); rebuildIndex(); } } DefaultKeyedValues(); int getItemCount(); Number getValue(int item); Comparable getKey(int index); int getIndex(Comparable key); List getKeys(); Number getValue(Comparable key); void addValue(Comparable key, double value); void addValue(Comparable key, Number value); void setValue(Comparable key, double value); void setValue(Comparable key, Number value); void insertValue(int position, Comparable key, double value); void insertValue(int position, Comparable key, Number value); void removeValue(int index); void removeValue(Comparable key); void clear(); void sortByKeys(SortOrder order); void sortByValues(SortOrder order); boolean equals(Object obj); int hashCode(); Object clone(); }