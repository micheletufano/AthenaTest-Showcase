DefaultKeyedValues2D implements KeyedValues2D, PublicCloneable, Cloneable, Serializable { public void removeColumn(Comparable columnKey) { if (columnKey == null) { throw new IllegalArgumentException("Null 'columnKey' argument."); } if (!this.columnKeys.contains(columnKey)) { throw new UnknownKeyException("Unknown key: " + columnKey); } Iterator iterator = this.rows.iterator(); while (iterator.hasNext()) { DefaultKeyedValues rowData = (DefaultKeyedValues) iterator.next(); int index = rowData.getIndex(columnKey); if (index >= 0) { rowData.removeValue(columnKey); } } this.columnKeys.remove(columnKey); } DefaultKeyedValues2D(); DefaultKeyedValues2D(boolean sortRowKeys); int getRowCount(); int getColumnCount(); Number getValue(int row, int column); Comparable getRowKey(int row); int getRowIndex(Comparable key); List getRowKeys(); Comparable getColumnKey(int column); int getColumnIndex(Comparable key); List getColumnKeys(); Number getValue(Comparable rowKey, Comparable columnKey); void addValue(Number value, Comparable rowKey, Comparable columnKey); void setValue(Number value, Comparable rowKey, Comparable columnKey); void removeValue(Comparable rowKey, Comparable columnKey); void removeRow(int rowIndex); void removeRow(Comparable rowKey); void removeColumn(int columnIndex); void removeColumn(Comparable columnKey); void clear(); boolean equals(Object o); int hashCode(); Object clone(); }