{"identifier": "sortByValues", "parameters": "(SortOrder order)", "modifiers": "public", "return": "void", "body": "public void sortByValues(SortOrder order) {\n        final int size = this.keys.size();\n        final DefaultKeyedValue[] data = new DefaultKeyedValue[size];\n        for (int i = 0; i < size; i++) {\n            data[i] = new DefaultKeyedValue((Comparable) this.keys.get(i), \n                    (Number) this.values.get(i));\n        }\n\n        Comparator comparator = new KeyedValueComparator(\n                KeyedValueComparatorType.BY_VALUE, order);\n        Arrays.sort(data, comparator);\n\n        clear();\n        for (int i = 0; i < data.length; i++) {\n            final DefaultKeyedValue value = data[i];\n            addValue(value.getKey(), value.getValue());\n        }\n    }", "class": "DefaultKeyedValues", "signature": "void sortByValues(SortOrder order)", "full_signature": "public void sortByValues(SortOrder order)", "class_method_signature": "DefaultKeyedValues.sortByValues(SortOrder order)", "testcase": false, "constructor": false, "invocations": ["size", "get", "get", "sort", "clear", "addValue", "getKey", "getValue"]}