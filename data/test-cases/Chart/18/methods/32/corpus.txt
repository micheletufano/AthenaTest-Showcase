DefaultKeyedValues2D implements KeyedValues2D, PublicCloneable, Cloneable, Serializable { public void removeValue(Comparable rowKey, Comparable columnKey) { setValue(null, rowKey, columnKey); boolean allNull = true; int rowIndex = getRowIndex(rowKey); DefaultKeyedValues row = (DefaultKeyedValues) this.rows.get(rowIndex); for (int item = 0, itemCount = row.getItemCount(); item < itemCount; item++) { if (row.getValue(item) != null) { allNull = false; break; } } if (allNull) { this.rowKeys.remove(rowIndex); this.rows.remove(rowIndex); } allNull = true; for (int item = 0, itemCount = this.rows.size(); item < itemCount; item++) { row = (DefaultKeyedValues) this.rows.get(item); int columnIndex = row.getIndex(columnKey); if (columnIndex >= 0 && row.getValue(columnIndex) != null) { allNull = false; break; } } if (allNull) { for (int item = 0, itemCount = this.rows.size(); item < itemCount; item++) { row = (DefaultKeyedValues) this.rows.get(item); int columnIndex = row.getIndex(columnKey); if (columnIndex >= 0) { row.removeValue(columnIndex); } } this.columnKeys.remove(columnKey); } } DefaultKeyedValues2D(); DefaultKeyedValues2D(boolean sortRowKeys); int getRowCount(); int getColumnCount(); Number getValue(int row, int column); Comparable getRowKey(int row); int getRowIndex(Comparable key); List getRowKeys(); Comparable getColumnKey(int column); int getColumnIndex(Comparable key); List getColumnKeys(); Number getValue(Comparable rowKey, Comparable columnKey); void addValue(Number value, Comparable rowKey, Comparable columnKey); void setValue(Number value, Comparable rowKey, Comparable columnKey); void removeValue(Comparable rowKey, Comparable columnKey); void removeRow(int rowIndex); void removeRow(Comparable rowKey); void removeColumn(int columnIndex); void removeColumn(Comparable columnKey); void clear(); boolean equals(Object o); int hashCode(); Object clone(); }