DefaultKeyedValues2D implements KeyedValues2D, PublicCloneable, Cloneable, Serializable { public void setValue(Number value, Comparable rowKey, Comparable columnKey) { DefaultKeyedValues row; int rowIndex = getRowIndex(rowKey); if (rowIndex >= 0) { row = (DefaultKeyedValues) this.rows.get(rowIndex); } else { row = new DefaultKeyedValues(); if (this.sortRowKeys) { rowIndex = -rowIndex - 1; this.rowKeys.add(rowIndex, rowKey); this.rows.add(rowIndex, row); } else { this.rowKeys.add(rowKey); this.rows.add(row); } } row.setValue(columnKey, value); int columnIndex = this.columnKeys.indexOf(columnKey); if (columnIndex < 0) { this.columnKeys.add(columnKey); } } DefaultKeyedValues2D(); DefaultKeyedValues2D(boolean sortRowKeys); int getRowCount(); int getColumnCount(); Number getValue(int row, int column); Comparable getRowKey(int row); int getRowIndex(Comparable key); List getRowKeys(); Comparable getColumnKey(int column); int getColumnIndex(Comparable key); List getColumnKeys(); Number getValue(Comparable rowKey, Comparable columnKey); void addValue(Number value, Comparable rowKey, Comparable columnKey); void setValue(Number value, Comparable rowKey, Comparable columnKey); void removeValue(Comparable rowKey, Comparable columnKey); void removeRow(int rowIndex); void removeRow(Comparable rowKey); void removeColumn(int columnIndex); void removeColumn(Comparable columnKey); void clear(); boolean equals(Object o); int hashCode(); Object clone(); }