{"identifier": "getStartValue", "parameters": "(int series, int category)", "modifiers": "public", "return": "Number", "body": "public Number getStartValue(int series, int category) {\n\n        // check arguments...\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\n                \"DefaultIntervalCategoryDataset.getValue(): \"\n                + \"series index out of range.\");\n        }\n\n        if ((category < 0) || (category >= getCategoryCount())) {\n            throw new IllegalArgumentException(\n                \"DefaultIntervalCategoryDataset.getValue(): \"\n                + \"category index out of range.\");\n        }\n\n        // fetch the value...\n        return this.startData[series][category];\n\n    }", "class": "DefaultIntervalCategoryDataset", "signature": "Number getStartValue(int series, int category)", "full_signature": "public Number getStartValue(int series, int category)", "class_method_signature": "DefaultIntervalCategoryDataset.getStartValue(int series, int category)", "testcase": false, "constructor": false, "invocations": ["getSeriesCount", "getCategoryCount"]}