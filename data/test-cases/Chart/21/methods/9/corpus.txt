DefaultBoxAndWhiskerCategoryDataset extends AbstractDataset implements BoxAndWhiskerCategoryDataset, RangeInfo, PublicCloneable { public Number getQ1Value(int row, int column) { Number result = null; BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject( row, column); if (item != null) { result = item.getQ1(); } return result; } DefaultBoxAndWhiskerCategoryDataset(); void add(List list, Comparable rowKey, Comparable columnKey); void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey); BoxAndWhiskerItem getItem(int row, int column); Number getValue(int row, int column); Number getValue(Comparable rowKey, Comparable columnKey); Number getMeanValue(int row, int column); Number getMeanValue(Comparable rowKey, Comparable columnKey); Number getMedianValue(int row, int column); Number getMedianValue(Comparable rowKey, Comparable columnKey); Number getQ1Value(int row, int column); Number getQ1Value(Comparable rowKey, Comparable columnKey); Number getQ3Value(int row, int column); Number getQ3Value(Comparable rowKey, Comparable columnKey); int getColumnIndex(Comparable key); Comparable getColumnKey(int column); List getColumnKeys(); int getRowIndex(Comparable key); Comparable getRowKey(int row); List getRowKeys(); int getRowCount(); int getColumnCount(); double getRangeLowerBound(boolean includeInterval); double getRangeUpperBound(boolean includeInterval); Range getRangeBounds(boolean includeInterval); Number getMinRegularValue(int row, int column); Number getMinRegularValue(Comparable rowKey, Comparable columnKey); Number getMaxRegularValue(int row, int column); Number getMaxRegularValue(Comparable rowKey, Comparable columnKey); Number getMinOutlier(int row, int column); Number getMinOutlier(Comparable rowKey, Comparable columnKey); Number getMaxOutlier(int row, int column); Number getMaxOutlier(Comparable rowKey, Comparable columnKey); List getOutliers(int row, int column); List getOutliers(Comparable rowKey, Comparable columnKey); boolean equals(Object obj); Object clone(); }