{"identifier": "removeAgedItems", "parameters": "(boolean notify)", "modifiers": "public", "return": "void", "body": "public void removeAgedItems(boolean notify) {\n        // check if there are any values earlier than specified by the history \n        // count...\n        if (getItemCount() > 1) {\n            long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();\n            boolean removed = false;\n            while ((latest - getTimePeriod(0).getSerialIndex()) \n                    > this.maximumItemAge) {\n                this.data.remove(0);\n                removed = true;\n            }\n            if (removed && notify) {\n                fireSeriesChanged();\n            }\n        }\n    }", "class": "TimeSeries", "signature": "void removeAgedItems(boolean notify)", "full_signature": "public void removeAgedItems(boolean notify)", "class_method_signature": "TimeSeries.removeAgedItems(boolean notify)", "testcase": false, "constructor": false, "invocations": ["getItemCount", "getSerialIndex", "getTimePeriod", "getItemCount", "getSerialIndex", "getTimePeriod", "remove", "fireSeriesChanged"]}