{"identifier": "canProcess", "parameters": "(final WriteableCommandLine commandLine,\n                              final String arg)", "modifiers": "public", "return": "boolean", "body": "public boolean canProcess(final WriteableCommandLine commandLine,\n                              final String arg) {\n        if (arg == null) {\n            return false;\n        }\n\n        // if arg does not require bursting\n        if (optionMap.containsKey(arg)) {\n            return true;\n        }\n\n        // filter\n        final Map tailMap = optionMap.tailMap(arg);\n\n        // check if bursting is required\n        for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) {\n            final Option option = (Option) iter.next();\n\n            if (option.canProcess(commandLine, arg)) {\n                return true;\n            }\n        }\n\n        if (commandLine.looksLikeOption(arg)) {\n            return false;\n        }\n\n        // anonymous argument(s) means we can process it\n        if (anonymous.size() > 0) {\n            return true;\n        }\n\n        return false;\n    }", "class": "GroupImpl", "signature": "boolean canProcess(final WriteableCommandLine commandLine,\n                              final String arg)", "full_signature": "public boolean canProcess(final WriteableCommandLine commandLine,\n                              final String arg)", "class_method_signature": "GroupImpl.canProcess(final WriteableCommandLine commandLine,\n                              final String arg)", "testcase": false, "constructor": false, "invocations": ["containsKey", "tailMap", "iterator", "values", "hasNext", "next", "canProcess", "looksLikeOption", "size"]}