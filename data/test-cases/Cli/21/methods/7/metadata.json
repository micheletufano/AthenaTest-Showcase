{"identifier": "getValues", "parameters": "(final Option option,\n                          List defaultValues)", "modifiers": "public", "return": "List", "body": "public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        if (defaultValues == null || defaultValues.isEmpty()) {\n            defaultValues = (List) this.defaultValues.get(option);\n        }\n\n        // augment the list with the default values\n        if (defaultValues != null && !defaultValues.isEmpty()) {\n            if (valueList == null || valueList.isEmpty()) {\n                valueList = defaultValues;\n            } else {\n                // if there are more default values as specified, add them to\n                // the list.\n                if (defaultValues.size() > valueList.size()) {\n                    // copy the list first\n                    valueList = new ArrayList(valueList);\n                    for (int i=valueList.size(); i<defaultValues.size(); i++) {\n                        valueList.add(defaultValues.get(i));\n                    }\n                }\n            }\n        }\n\n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }", "class": "WriteableCommandLineImpl", "signature": "List getValues(final Option option,\n                          List defaultValues)", "full_signature": "public List getValues(final Option option,\n                          List defaultValues)", "class_method_signature": "WriteableCommandLineImpl.getValues(final Option option,\n                          List defaultValues)", "testcase": false, "constructor": false, "invocations": ["get", "isEmpty", "get", "isEmpty", "isEmpty", "size", "size", "size", "size", "add", "get"]}