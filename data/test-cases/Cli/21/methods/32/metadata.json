{"identifier": "helpLines", "parameters": "(final int depth,\n                          final Set helpSettings,\n                          final Comparator comp)", "modifiers": "public", "return": "List", "body": "public List helpLines(final int depth,\n                          final Set helpSettings,\n                          final Comparator comp) {\n        final List helpLines = new ArrayList();\n\n        if (helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME)) {\n            final HelpLine helpLine = new HelpLineImpl(this, depth);\n            helpLines.add(helpLine);\n        }\n\n        if (helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) {\n            // grab a list of the group's options.\n            final List list;\n\n            if (comp == null) {\n                // default to using the initial order\n                list = options;\n            } else {\n                // sort options if comparator is supplied\n                list = new ArrayList(options);\n                Collections.sort(list, comp);\n            }\n\n            // for each option\n            for (final Iterator i = list.iterator(); i.hasNext();) {\n                final Option option = (Option) i.next();\n                helpLines.addAll(option.helpLines(depth + 1, helpSettings, comp));\n            }\n        }\n\n        if (helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT)) {\n            for (final Iterator i = anonymous.iterator(); i.hasNext();) {\n                final Option option = (Option) i.next();\n                helpLines.addAll(option.helpLines(depth + 1, helpSettings, comp));\n            }\n        }\n\n        return helpLines;\n    }", "class": "GroupImpl", "signature": "List helpLines(final int depth,\n                          final Set helpSettings,\n                          final Comparator comp)", "full_signature": "public List helpLines(final int depth,\n                          final Set helpSettings,\n                          final Comparator comp)", "class_method_signature": "GroupImpl.helpLines(final int depth,\n                          final Set helpSettings,\n                          final Comparator comp)", "testcase": false, "constructor": false, "invocations": ["contains", "add", "contains", "sort", "iterator", "hasNext", "next", "addAll", "helpLines", "contains", "iterator", "hasNext", "next", "addAll", "helpLines"]}