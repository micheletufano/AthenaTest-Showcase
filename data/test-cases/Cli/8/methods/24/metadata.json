{"identifier": "printUsage", "parameters": "(PrintWriter pw, int width, String app, \n                           Options options)", "modifiers": "public", "return": "void", "body": "public void printUsage(PrintWriter pw, int width, String app, \n                           Options options)\n    {\n        // initialise the string buffer\n        StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app)\n                                                                 .append(\" \");\n\n        // create a list for processed option groups\n        final Collection processedGroups = new ArrayList();\n\n        // temp variable\n        Option option;\n\n        List optList = new ArrayList(options.getOptions());\n        Collections.sort(optList, new OptionComparator());\n        // iterate over the options\n        for (Iterator i = optList.iterator(); i.hasNext();)\n        {\n            // get the next Option\n            option = (Option) i.next();\n\n            // check if the option is part of an OptionGroup\n            OptionGroup group = options.getOptionGroup(option);\n\n            // if the option is part of a group \n            if (group != null)\n            {\n                // and if the group has not already been processed\n                if (!processedGroups.contains(group))\n                {\n                    // add the group to the processed list\n                    processedGroups.add(group);\n\n\n                    // add the usage clause\n                    appendOptionGroup(buff, group);\n                }\n\n                // otherwise the option was displayed in the group\n                // previously so ignore it.\n            }\n\n            // if the Option is not part of an OptionGroup\n            else\n            {\n                appendOption(buff, option, option.isRequired());\n            }\n\n            if (i.hasNext())\n            {\n                buff.append(\" \");\n            }\n        }\n\n\n        // call printWrapped\n        printWrapped(pw, width, buff.toString().indexOf(' ') + 1, \n                     buff.toString());\n    }", "class": "HelpFormatter", "signature": "void printUsage(PrintWriter pw, int width, String app, \n                           Options options)", "full_signature": "public void printUsage(PrintWriter pw, int width, String app, \n                           Options options)", "class_method_signature": "HelpFormatter.printUsage(PrintWriter pw, int width, String app, \n                           Options options)", "testcase": false, "constructor": false, "invocations": ["append", "append", "getOptions", "sort", "iterator", "hasNext", "next", "getOptionGroup", "contains", "add", "appendOptionGroup", "appendOption", "isRequired", "hasNext", "append", "printWrapped", "indexOf", "toString", "toString"]}