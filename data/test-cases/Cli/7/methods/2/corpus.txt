PatternBuilder { public void withPattern(final String pattern) { int sz = pattern.length(); char opt = ' '; char ch = ' '; char type = ' '; boolean required = false; for (int i = 0; i < sz; i++) { ch = pattern.charAt(i); switch (ch) { case '!' : required = true; break; case '@' : case ':' : case '%' : case '+' : case '#' : case '<' : case '>' : case '*' : case '/' : type = ch; break; default : if (opt != ' ') { createOption(type, required, opt); required = false; type = ' '; } opt = ch; } } if (opt != ' ') { createOption(type, required, opt); } } PatternBuilder(); PatternBuilder( final GroupBuilder gbuilder, final DefaultOptionBuilder obuilder, final ArgumentBuilder abuilder); Option create(); PatternBuilder reset(); void withPattern(final String pattern); }