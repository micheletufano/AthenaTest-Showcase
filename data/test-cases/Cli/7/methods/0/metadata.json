{"identifier": "create", "parameters": "()", "modifiers": "public", "return": "Option", "body": "public Option create() {\n        final Option option;\n\n        if (options.size() == 1) {\n            option = (Option)options.iterator().next();\n        }\n        else {\n            gbuilder.reset();\n            for (final Iterator i = options.iterator(); i.hasNext();) {\n                gbuilder.withOption((Option)i.next());\n            }\n            option = gbuilder.create();\n        }\n\n        reset();\n\n        return option;\n    }", "class": "PatternBuilder", "signature": "Option create()", "full_signature": "public Option create()", "class_method_signature": "PatternBuilder.create()", "testcase": false, "constructor": false, "invocations": ["size", "next", "iterator", "reset", "iterator", "hasNext", "withOption", "next", "create", "reset"]}